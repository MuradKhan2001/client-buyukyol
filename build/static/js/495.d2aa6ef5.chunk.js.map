{"version":3,"file":"static/js/495.d2aa6ef5.chunk.js","mappings":"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","sources":["components/notFound/NotFound.jsx","components/modal/Modal.jsx","components/alerts/Alerts.jsx","components/dashboard-mobile/DashboardMobile.jsx","components/dashboard/Dashboard.jsx","components/login/useOnKeyPress.js","components/login/Login.jsx","components/register/Register.jsx","components/register/useOnKeyPress.js","components/map-mobile/googleMapsApi.js","components/map-mobile/MapBoxMobile.jsx","components/map/MapBox.jsx","components/map/googleMapsApi.js","components/post-order/PostOrder.jsx","components/post-order/googleMapsApi.js","components/profile/Profile.jsx","components/notification/Notification.jsx","components/history/History.jsx","components/settings-mobile/SettingsMobile.jsx","routes/Routes.jsx","components/app/App.js"],"sourcesContent":["import \"./not-found.scss\";\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\nconst NotFound = () => {\r\n    const {t} = useTranslation();\r\n\r\n    return <div className=\"not-found-wrapper\">\r\n        <div className=\"sloy\">\r\n            <div className=\"text1\">\r\n                <div className=\"error\">\r\n                    error 404\r\n                </div>\r\n                <div className=\"text\">\r\n                    {t(\"page-not-found\")}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n};\r\n\r\nexport default NotFound","import {useRef, useState, useContext, useEffect} from \"react\";\r\nimport {CSSTransition} from \"react-transition-group\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport ReactStars from \"react-stars\";\r\nimport {hideModal, showModals} from \"../../redux/ModalContent\";\r\nimport \"./style.scss\";\r\nimport axios from \"axios\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {webSockedContext} from \"../app/App\";\r\nimport {getOrders} from \"../../redux/Orders\";\r\nimport {addRaidDriver} from \"../../redux/RaidDriver\";\r\nimport {delAlert, addAlert} from \"../../redux/AlertsBox\";\r\n\r\nconst Modal = () => {\r\n    const baseUrl = useSelector((store) => store.baseUrl.data);\r\n    const modalContent = useSelector((store) => store.ModalContent.data);\r\n    const activeOrders = useSelector((store) => store.Orders.activeOrders);\r\n    const drivers = useSelector((store) => store.DriversList.data);\r\n    const Raiddriver = useSelector((store) => store.RaidDriver.data);\r\n    let webSocked = useContext(webSockedContext);\r\n    const navigate = useNavigate();\r\n    const {t} = useTranslation();\r\n    const nodeRef = useRef(null);\r\n    const dispatch = useDispatch();\r\n    const [raidCount, setRaidCount] = useState();\r\n    const [reason, setReason] = useState(\"\");\r\n    const [add_reason, setAdd_Reason] = useState(\"\");\r\n    const [cargoId, setCargoId] = useState(\"\");\r\n    const [many, setMany] = useState(false);\r\n    const [comment, setComment] = useState(\"\")\r\n\r\n    const logOut = () => {\r\n        localStorage.removeItem(\"token\");\r\n        localStorage.removeItem(\"userId\");\r\n        window.location.reload();\r\n        window.location.pathname = \"/\";\r\n    };\r\n    const showCancel = () => {\r\n        setCargoId(modalContent.order.id);\r\n        if (modalContent.order.number_cars > 1) {\r\n            dispatch(showModals({show: true, status: \"cancel-order-reason\"}));\r\n        } else dispatch(showModals({show: true, status: \"cancel-order\"}));\r\n    };\r\n    const delOrder = () => {\r\n        let order = {\r\n            command: \"cancel_order\",\r\n            id: cargoId,\r\n            reason,\r\n            many,\r\n        };\r\n        webSocked.send(JSON.stringify(order));\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch(getOrders());\r\n        return () => {\r\n            getOrders();\r\n        };\r\n    }, []);\r\n\r\n    const showModalContent = (order) => {\r\n        dispatch(showModals({show: true, status: \"order\", order}));\r\n    };\r\n\r\n    const sendRaid = (id, did) => {\r\n        let raidList = {\r\n            driver: id,\r\n            delivery: did,\r\n            mark: raidCount,\r\n            comment: comment\r\n        };\r\n\r\n        axios\r\n            .post(`${baseUrl}api/comment/`, raidList, {\r\n                headers: {\r\n                    Authorization: `Token ${localStorage.getItem(\"token\")}`,\r\n                },\r\n            })\r\n            .then((response) => {\r\n                let idAlert = Date.now();\r\n                let alert = {\r\n                    id: idAlert,\r\n                    text: t(\"raidDriverText\"),\r\n                    img: \"./images/green.svg\",\r\n                    color: \"#EDFFFA\"\r\n                };\r\n                dispatch(addAlert(alert));\r\n                setTimeout(() => {\r\n                    dispatch(delAlert(idAlert));\r\n                }, 5000);\r\n                dispatch(hideModal({show: false}));\r\n\r\n                let driver = Raiddriver.filter((item, index) => index > 0);\r\n                dispatch(addRaidDriver(driver));\r\n\r\n            })\r\n            .catch((error) => {\r\n                if (error.response.statusText == \"Unauthorized\") {\r\n                    window.location.pathname = \"/\";\r\n                    localStorage.removeItem(\"token\");\r\n                    localStorage.removeItem(\"userId\");\r\n                }\r\n            });\r\n    };\r\n\r\n    const cancelRaid = (id) => {\r\n        let cancelRaid = {\r\n            command: \"unrate\",\r\n            id: id,\r\n        };\r\n\r\n        webSocked.send(JSON.stringify(cancelRaid));\r\n\r\n        let driver = Raiddriver.filter((item, index) => index > 0);\r\n        dispatch(addRaidDriver(driver));\r\n        dispatch(hideModal({show: false}));\r\n    };\r\n\r\n    return (\r\n        <CSSTransition\r\n            in={modalContent.show || Raiddriver.length > 0}\r\n            nodeRef={nodeRef}\r\n            timeout={300}\r\n            classNames=\"alert\"\r\n            unmountOnExit\r\n        >\r\n            <div\r\n                className={`modal-sloy ${\r\n                    modalContent.status === \"order\" ? \"align-none\" : \"\"\r\n                }`}\r\n            >\r\n                <div ref={nodeRef} className=\"modal-card\">\r\n                    {modalContent.status === \"log-out\" && (\r\n                        <div className=\"confirm\">\r\n                            <div className=\"toptext\">\r\n                                {t(\"modal-title1\")}\r\n                            </div>\r\n                            <div className=\"btns\">\r\n                                <button\r\n                                    className=\"not-out\"\r\n                                    onClick={() => dispatch(hideModal({show: false}))}\r\n                                >\r\n                                    {t(\"button3\")}\r\n                                </button>\r\n                                <button onClick={logOut}>\r\n                                    {t(\"button4\")}\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {modalContent.status === \"order\" && modalContent.order && (\r\n                        <div className=\"show-order\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img\r\n                                    onClick={() => dispatch(hideModal({show: false}))}\r\n                                    src=\"./images/x.png\"\r\n                                    alt=\"\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"title\">{t(\"moreInfo\")}</div>\r\n\r\n                            <div className=\"info-direction\">\r\n                                <div className=\"label-info\">{t(\"info1\")}</div>\r\n                                <div className=\"value-info\">\r\n                                    {modalContent.order.type === \"OUT\" ? t(\"direction2\") : \"\"}\r\n                                    {modalContent.order.type === \"IN\" ? t(\"direction3\") : \"\"}\r\n                                    {modalContent.order.type === \"Abroad\" ? t(\"direction1\") : \"\"}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"info\">\r\n                                <div className=\"label-info\">{t(\"loc1\")}</div>\r\n                                <div className=\"value-info\">\r\n                                    {\" \"}\r\n                                    {modalContent.order.address_from}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"info\">\r\n                                <div className=\"label-info\">{t(\"loc3\")}</div>\r\n                                <div className=\"value-info\">\r\n                                    {\" \"}\r\n                                    {modalContent.order.address_to}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"info\">\r\n                                <div className=\"label-info\"> {t(\"info2\")}</div>\r\n                                <div className=\"value-info\"> {modalContent.order.cargo}</div>\r\n                            </div>\r\n\r\n                            <div className=\"info\">\r\n                                <div className=\"label-info\"> {t(\"info7\")}</div>\r\n                                <div className=\"value-info\">\r\n                                    {\" \"}\r\n                                    {modalContent.order.distance} km\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"info\">\r\n                                <div className=\"label-info\"> {t(\"info10\")}</div>\r\n                                <div className=\"value-info\">\r\n                                    {modalContent.order.payment_type}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"info\">\r\n                                <div className=\"label-info\"> {t(\"info8\")}</div>\r\n                                <div className=\"value-info\">\r\n                                    {modalContent.order.price} {modalContent.order.currency}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"info\">\r\n                                <div className=\"label-info\"> {t(\"info3\")}</div>\r\n                                <div className=\"value-info\">\r\n                                    {\" \"}\r\n                                    {modalContent.order.number_cars}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"info\">\r\n                                <div className=\"label-info\"> {t(\"info4\")}</div>\r\n                                <div className=\"value-info\">\r\n                                    {\" \"}\r\n                                    {modalContent.order.capacity} {modalContent.order.unit}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"info\">\r\n                                <div className=\"label-info\">{t(\"info5\")}</div>\r\n                                <div className=\"value-info\">\r\n                                    {modalContent.order.car_category.min_weight\r\n                                        ? modalContent.order.car_category.min_weight\r\n                                        : \"\"}\r\n                                    -\r\n                                    {modalContent.order.car_category.max_weight\r\n                                        ? modalContent.order.car_category.max_weight\r\n                                        : \"\"}{\" \"}\r\n                                    {t(\"infoWaits4\")},\r\n                                    {modalContent.order.car_category.name === \"Мини\" &&\r\n                                        t(\"tariff1\")}\r\n                                    {modalContent.order.car_category.name === \"Енгил\" &&\r\n                                        t(\"tariff2\")}\r\n                                    {modalContent.order.car_category.name === \"Ўрта\" &&\r\n                                        t(\"tariff3\")}\r\n                                    {modalContent.order.car_category.name === \"Оғир\" &&\r\n                                        t(\"tariff4\")}\r\n                                    {modalContent.order.car_category.name === \"Ўта оғир\" &&\r\n                                        t(\"tariff5\")}\r\n                                    {modalContent.order.car_category.name === \"Авто Ташувчи\" &&\r\n                                        t(\"tariff6\")}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"info\">\r\n                                <div className=\"label-info\"> {t(\"info6\")}</div>\r\n                                <div className=\"value-info\">\r\n                                    {\" \"}\r\n                                    {modalContent.order.car_body_type.name}\r\n                                </div>\r\n                            </div>\r\n\r\n                            {modalContent.order.avans ? (\r\n                                <div className=\"info\">\r\n                                    <div className=\"label-info\"> {t(\"info9\")}</div>\r\n                                    <div className=\"value-info\">\r\n                                        {\" \"}\r\n                                        {modalContent.order.avans} {modalContent.order.currency}\r\n                                    </div>\r\n                                </div>\r\n                            ) : (\r\n                                \"\"\r\n                            )}\r\n\r\n                            {modalContent.order.wait_cost ? (\r\n                                <div className=\"info\">\r\n                                    <div className=\"label-info\"> {t(\"info11\")}</div>\r\n\r\n                                    <div className=\"value-info\">\r\n                                        {modalContent.order.wait_cost} {modalContent.order.currency}\r\n                                    </div>\r\n                                </div>\r\n                            ) : (\r\n                                \"\"\r\n                            )}\r\n\r\n                            {modalContent.order.load_time ? (\r\n                                <div className=\"info\">\r\n                                    <div className=\"label-info\"> {t(\"info12\")}</div>\r\n                                    <div className=\"value-info\">\r\n                                        {modalContent.order.load_time.slice(0, 10)},\r\n                                        {modalContent.order.load_time.slice(11, 16)}\r\n                                    </div>\r\n                                </div>\r\n                            ) : (\r\n                                \"\"\r\n                            )}\r\n\r\n                            {modalContent.order.start_time ? (\r\n                                <div className=\"info\">\r\n                                    <div className=\"label-info\"> {t(\"info13\")}</div>\r\n                                    <div className=\"value-info\">\r\n                                        {modalContent.order.start_time.slice(0, 10)},\r\n                                        {modalContent.order.start_time.slice(11, 16)}\r\n                                    </div>\r\n                                </div>\r\n                            ) : (\r\n                                \"\"\r\n                            )}\r\n\r\n                            {modalContent.order.status === \"Delivered\" ? (\r\n                                <div className=\"info-direction\">\r\n                                    <div className=\"label-info\"> {t(\"timeCargo2\")}</div>\r\n                                    <div className=\"value-info\">\r\n                                        {modalContent.order.ordered_time.slice(0, 10)},\r\n                                        {modalContent.order.ordered_time.slice(11, 16)}\r\n                                    </div>\r\n                                </div>\r\n                            ) : (\r\n                                \"\"\r\n                            )}\r\n\r\n                            {modalContent.order.rejected_reason ? (\r\n                                <div className=\"cancel-reason\">\r\n                                    {modalContent.order.rejected_reason}\r\n                                </div>\r\n                            ) : modalContent.order.status === \"Delivered\" ? (\r\n                                \"\"\r\n                            ) : (\r\n                                <div onClick={showCancel} className=\"cancel-order\">\r\n                                    {t(\"button3\")}\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    )}\r\n\r\n                    {modalContent.status === \"cancel-order\" && (\r\n                        <div className=\"cancel-order\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img\r\n                                    onClick={() => dispatch(hideModal({show: false}))}\r\n                                    src=\"./images/x.png\"\r\n                                    alt=\"\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"title\">{t(\"reasonText\")}</div>\r\n\r\n                            <div className=\"cancel-order-info\">\r\n                                <div>\r\n                                    <input\r\n                                        onChange={(e) => {\r\n                                            setReason(e.target.value);\r\n                                        }}\r\n                                        id=\"reason1\"\r\n                                        type=\"radio\"\r\n                                        name=\"money\"\r\n                                        value={t(\"reason1\")}\r\n                                    />\r\n                                    <label htmlFor=\"reason1\">{t(\"reason1\")}</label>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <input\r\n                                        onChange={(e) => {\r\n                                            setReason(e.target.value);\r\n                                        }}\r\n                                        id=\"reason2\"\r\n                                        type=\"radio\"\r\n                                        name=\"money\"\r\n                                        value={t(\"reason2\")}\r\n                                    />\r\n                                    <label htmlFor=\"reason2\">{t(\"reason2\")}</label>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <input\r\n                                        onChange={(e) => {\r\n                                            setReason(e.target.value);\r\n                                        }}\r\n                                        id=\"reason3\"\r\n                                        type=\"radio\"\r\n                                        name=\"money\"\r\n                                        value={t(\"reason3\")}\r\n                                    />\r\n                                    <label htmlFor=\"reason3\">{t(\"reason3\")}</label>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <input\r\n                                        onChange={(e) => {\r\n                                            setReason(e.target.value);\r\n                                        }}\r\n                                        id=\"reason5\"\r\n                                        type=\"radio\"\r\n                                        name=\"money\"\r\n                                        value={add_reason}\r\n                                    />\r\n                                    <label htmlFor=\"reason3\">\r\n                                        <input\r\n                                            placeholder={t(\"reason4\")}\r\n                                            onChange={(e) => setAdd_Reason(e.target.value)}\r\n                                            id=\"reason4\"\r\n                                            type=\"text\"\r\n                                            name=\"money\"\r\n                                        />\r\n                                    </label>\r\n                                </div>\r\n\r\n                                <div onClick={delOrder} className=\"cancel-btn\">\r\n                                    {t(\"button2\")}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {modalContent.status === \"cancel-order-reason\" && (\r\n                        <div className=\"cancel-order\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img\r\n                                    onClick={() => dispatch(hideModal({show: false}))}\r\n                                    src=\"./images/x.png\"\r\n                                    alt=\"\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"title-reason\">{t(\"reasonText1\")}</div>\r\n\r\n                            <div className=\"cancel-order-info\">\r\n                                <div>\r\n                                    <input\r\n                                        onChange={() => setMany(true)}\r\n                                        id=\"reasonYes\"\r\n                                        type=\"radio\"\r\n                                        name=\"reasons\"\r\n                                    />\r\n                                    <label htmlFor=\"reasonYes\">{t(\"yes\")}</label>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <input\r\n                                        checked={true}\r\n                                        onChange={() => setMany(false)}\r\n                                        id=\"reasonNo\"\r\n                                        type=\"radio\"\r\n                                        name=\"reasons\"\r\n                                    />\r\n                                    <label htmlFor=\"reasonNo\">{t(\"no\")}</label>\r\n                                </div>\r\n\r\n                                <div\r\n                                    onClick={() =>\r\n                                        dispatch(showModals({show: true, status: \"cancel-order\"}))\r\n                                    }\r\n                                    className=\"cancel-btn\"\r\n                                >\r\n                                    {t(\"button2\")}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {modalContent.status === \"drivers\" && (\r\n                        <div className=\"drivers-list\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img\r\n                                    onClick={() => dispatch(hideModal({show: false}))}\r\n                                    src=\"./images/x.png\"\r\n                                    alt=\"\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"title\">{t(\"driver\")}</div>\r\n\r\n                            <div className=\"drivers-info\">\r\n                                {drivers.map((item, index) => {\r\n                                    return (\r\n                                        <a\r\n                                            href={`tel:${item.phone}`}\r\n                                            key={index}\r\n                                            className=\"bottom-side-driver\"\r\n                                        >\r\n                                            <div className=\"photo\">\r\n                                                <img src={baseUrl + item.driver.image} alt=\"\"/>\r\n                                            </div>\r\n\r\n                                            <div className=\"content\">\r\n                                                <div className=\"title\">\r\n                                                    {item.driver.first_name} &nbsp;\r\n                                                    {item.driver.last_name}\r\n                                                </div>\r\n                                                <div className=\"text\">\r\n                                                    <img src=\"./images/truck2.png\" alt=\"\"/>\r\n                                                    <div className=\"info\">\r\n                                                        <div className=\"label\">\r\n                                                            {item.driver.name\r\n                                                                ? item.driver.name\r\n                                                                : \"\"}\r\n                                                        </div>\r\n                                                        <div className=\"content\">\r\n                                                            {item.driver.car_number\r\n                                                                ? item.driver.car_number\r\n                                                                : \"\"}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"text\">\r\n                                                    <img src=\"./images/phone.png\" alt=\"\"/>\r\n                                                    <div className=\"info\">\r\n                                                        <div className=\"label\">{item.driver.phone}</div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </a>\r\n                                    );\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {modalContent.status === \"active-orders\" && (\r\n                        <div className=\"active-orders-list\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img\r\n                                    onClick={() => dispatch(hideModal({show: false}))}\r\n                                    src=\"./images/x.png\"\r\n                                    alt=\"\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"title\">{t(\"cargoLabel1\")}</div>\r\n\r\n                            <div className=\"orders-info\">\r\n\r\n                                {activeOrders.map((item, index) => {\r\n                                    return <div key={index}\r\n                                                onClick={() => {\r\n                                                    showModalContent(item);\r\n                                                }}>\r\n                                        <div className=\"top-side-order\">\r\n                                            <div className=\"date\">\r\n                                                {item.ordered_time.slice(0, 10)}, &nbsp;\r\n                                                {item.ordered_time.slice(11, 16)}\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"bottom-side-order\">\r\n                                            <div className=\"photo\">\r\n                                                <img\r\n                                                    src={`${baseUrl}${item.car_category.image}`}\r\n                                                    alt=\"\"\r\n                                                />\r\n                                            </div>\r\n\r\n                                            <div className=\"content\">\r\n                                                <div className=\"title\">\r\n                                                    {item.order_title ? item.order_title : item.type === \"OUT\" ? t(\"direction2\") :\r\n                                                        item.type === \"IN\" ? t(\"direction3\") : t(\"direction1\")}\r\n                                                </div>\r\n                                                <div className=\"text\">\r\n                                                    <img src=\"./images/location.png\" alt=\"\"/>\r\n                                                    <div className=\"info\">\r\n                                                        <div className=\"label\">{t(\"info7\")}</div>\r\n                                                        <div className=\"content\">{item.distance} km</div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"text\">\r\n                                                    <img src=\"./images/price.png\" alt=\"\"/>\r\n                                                    <div className=\"info\">\r\n                                                        <div className=\"label\">{t(\"info14\")}</div>\r\n                                                        <div className=\"content\">\r\n                                                            {item.price} {item.currency}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                })}\r\n\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n\r\n                    {Raiddriver.length > 0 ? (\r\n                        <div className=\"driver-raid\">\r\n                            <div className=\"photo-driver\">\r\n                                <img src={`${baseUrl}${Raiddriver[0].driver.image}`} alt=\"\"/>\r\n                            </div>\r\n\r\n                            <div className=\"title\">{t(\"raidDriver\")}</div>\r\n\r\n                            <div className=\"description\">\r\n                                {t(\"raidDriver2\")}\r\n                            </div>\r\n\r\n                            <div className=\"stars\">\r\n                                <ReactStars\r\n                                    count={5}\r\n                                    onChange={(e) => {\r\n                                        setRaidCount(e);\r\n                                    }}\r\n                                    size={50}\r\n                                    color2={\"#047766\"}\r\n                                    half={false}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"comment-box\">\r\n                                <input onChange={(e) => setComment(e.target.value)} placeholder={t(\"comment\")}\r\n                                       type=\"text\"/>\r\n                            </div>\r\n\r\n                            <div className=\"buttons\">\r\n                                <button\r\n                                    onClick={() => cancelRaid(Raiddriver[0].id)}\r\n                                    className=\"cancel-btn\"\r\n                                >\r\n                                    {t(\"button3\")}\r\n                                </button>\r\n\r\n                                <button\r\n                                    onClick={() =>\r\n                                        sendRaid(Raiddriver[0].driver.id, Raiddriver[0].id)\r\n                                    }\r\n                                    className=\"next-btn \"\r\n                                >\r\n                                    {t(\"button2\")}\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    ) : (\r\n                        \"\"\r\n                    )}\r\n\r\n                    {modalContent.status === \"active-driver\" && (\r\n                        <div className=\"active-driver-list\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img\r\n                                    onClick={() => dispatch(hideModal({show: false}))}\r\n                                    src=\"./images/x.png\"\r\n                                    alt=\"\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"title\">{t(\"order\")}</div>\r\n\r\n                            {\r\n                                drivers.map((item, index) => {\r\n                                    if (item.driver.id === modalContent.item.driver) {\r\n                                        return <div key={index} className=\"drivers-info\">\r\n                                            <div\r\n                                                onClick={() => {\r\n                                                    navigate(\"/history\");\r\n                                                    dispatch(hideModal({show: false}));\r\n                                                }}\r\n                                                className=\"bottom-side-driver\"\r\n                                            >\r\n                                                <div className=\"photo\">\r\n                                                    <img src={baseUrl + item.driver.image} alt=\"\"/>\r\n                                                </div>\r\n\r\n                                                <div className=\"content\">\r\n                                                    <div\r\n                                                        className=\"title\">{item.driver.first_name} {item.driver.last_name}</div>\r\n                                                    <div className=\"text\">\r\n                                                        <img src=\"./images/truck2.png\" alt=\"\"/>\r\n                                                        <div className=\"info\">\r\n                                                            <div className=\"label\">\r\n                                                                {item.driver.name}\r\n                                                            </div>\r\n                                                            <div className=\"content\">\r\n                                                                {item.driver.car_number}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"text\">\r\n                                                        <img src=\"./images/phone.png\" alt=\"\"/>\r\n                                                        <div className=\"info\">\r\n                                                            <div className=\"label\">\r\n                                                                {item.driver.phone}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"information-cargo\">\r\n                                                <div className=\"label-info\">{t(\"loc1\")}</div>\r\n                                                <div className=\"info\">\r\n                                                    {item.order.address_from}\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"information-cargo\">\r\n                                                <div className=\"label-info\">{t(\"loc3\")}</div>\r\n                                                <div className=\"info\">\r\n                                                    {item.order.address_from}\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"information-cargo\">\r\n                                                <div className=\"label-info\">{t(\"info2\")}</div>\r\n                                                <div className=\"info\">\r\n                                                    {item.order.cargo}\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"information-cargo\">\r\n                                                <div className=\"label-info\">{t(\"info4\")}</div>\r\n                                                <div className=\"info\">{item.order.capacity} {item.order.unit}</div>\r\n                                            </div>\r\n\r\n                                            <div className=\"information-cargo\">\r\n                                                <div className=\"label-info\">{t(\"info8\")}</div>\r\n                                                <div className=\"info\">{item.order.price} {item.order.currency}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    }\r\n                                })\r\n                            }\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </CSSTransition>\r\n    );\r\n};\r\nexport default Modal;\r\n","import \"./style.scss\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport {delAlert} from \"../../redux/AlertsBox\"\r\n\r\nconst Alerts = () => {\r\n    const dispatch = useDispatch()\r\n    const Alerts = useSelector((store) => store.Alerts.data)\r\n    const delAlerts = (id) => {\r\n        dispatch(delAlert(id))\r\n    }\r\n\r\n    return <div className=\"alerts-container\">\r\n\r\n        {\r\n            Alerts.length > 0 && <div className={`alerts-box ${Alerts.length > 3 ? \"alerts-box-hide\" : \"\"}`}>\r\n                {Alerts.map((item, index) => {\r\n                    return <div key={index} className=\"alert\">\r\n                        <div style={{background:item.color}} className=\"left-side\">\r\n                            <img src={item.img} alt=\"\"/>\r\n                        </div>\r\n                        <div className=\"right-side\">\r\n                            {item.text}\r\n                        </div>\r\n                        <div className=\"xbtn\">\r\n                            <img onClick={() => delAlerts(item.id)} src=\"./images/x-button.png\" alt=\"\"/>\r\n                        </div>\r\n                    </div>\r\n                })}\r\n            </div>\r\n        }\r\n\r\n    </div>\r\n}\r\n\r\nexport default Alerts","import {Route, Routes, NavLink, useNavigate} from \"react-router-dom\";\r\nimport {userPageRoutes} from \"../../routes/Routes\";\r\nimport \"./style.scss\";\r\nimport {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\n\r\nconst DashboardMobile = () => {\r\n    const navigate = useNavigate();\r\n    const [nav, setNav] = useState(false)\r\n    const {t} = useTranslation();\r\n    const baseUrl = useSelector((store) => store.baseUrl.data)\r\n\r\n    useEffect(() => {\r\n        axios.get(`${baseUrl}api/client/`, {\r\n            headers: {\r\n                Authorization: `Token ${localStorage.getItem(\"token\")}`,\r\n            },\r\n        }).then((response) => {\r\n        }).catch((error) => {\r\n            if (error.response.statusText == \"Unauthorized\") {\r\n                window.location.pathname = \"/\";\r\n                localStorage.removeItem(\"token\");\r\n                localStorage.removeItem(\"userId\");\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    return (<div className=\"dashboard-container\">\r\n\r\n            <div  className=\"body-side\">\r\n                <Routes>\r\n                    {userPageRoutes.map((route, index) => (\r\n                        <Route key={index} {...route} />\r\n                    ))}\r\n                </Routes>\r\n            </div>\r\n\r\n            <div onClick={() => setNav(prevState => !prevState)} className=\"burger\">\r\n                <img src=\"./images/menu-burger.png\" alt=\"\"/>\r\n            </div>\r\n\r\n            <div className={`menu-berger ${nav ? \"show-menu\" : \"\"}`}>\r\n\r\n                <div className=\"header-menu\">\r\n                    <div className=\"close-menu\">\r\n                        <img onClick={() => setNav(prevState => false)} src=\"./images/xx.png\" alt=\"\"/>\r\n                    </div>\r\n                    <div className=\"logo-menu\">\r\n                        <img src=\"./images/white-logo.png\" alt=\"\"/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"body-menu\">\r\n\r\n                    <div onClick={() => {\r\n                        navigate(\"/\")\r\n                        setNav(prevState => false)\r\n                    }} className=\"menu-item\">\r\n                        <div className=\"left-menu\">\r\n                            <div className=\"icon-home\">\r\n                                <img src=\"./images/house.png\" alt=\"\"/>\r\n                            </div>\r\n\r\n                            <div className=\"name\">\r\n                                {t(\"nav-home\")}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"icon\">\r\n                            <img src=\"./images/left.png\" alt=\"\"/>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div onClick={() => {\r\n                        navigate(\"/profile\")\r\n                        setNav(prevState => false)\r\n                    }} className=\"menu-item\">\r\n                        <div className=\"left-menu\">\r\n                            <div className=\"icon\">\r\n                                <img src=\"./images/person-menu.png\" alt=\"\"/>\r\n                            </div>\r\n                            <div className=\"name\">\r\n                                {t(\"nav-profile\")}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"icon\">\r\n                            <img src=\"./images/left.png\" alt=\"\"/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div onClick={() => {\r\n                        navigate(\"/history\")\r\n                        setNav(prevState => false)\r\n                    }} className=\"menu-item\">\r\n                        <div className=\"left-menu\">\r\n                            <div className=\"icon\">\r\n                                <img src=\"./images/history.png\" alt=\"\"/>\r\n                            </div>\r\n                            <div className=\"name\">\r\n                                {t(\"nav-history\")}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"icon\">\r\n                            <img src=\"./images/left.png\" alt=\"\"/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div onClick={() => {\r\n                        navigate(\"/settings\")\r\n                        setNav(prevState => false)\r\n                    }} className=\"menu-item\">\r\n                        <div className=\"left-menu\">\r\n                            <div className=\"icon-home\">\r\n                                <img src=\"./images/settings.png\" alt=\"\"/>\r\n                            </div>\r\n                            <div className=\"name\">\r\n                                {t(\"nav-settings\")}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"icon\">\r\n                            <img src=\"./images/left.png\" alt=\"\"/>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n            {/*<div className=\"footer-side\">*/}\r\n            {/*    <NavLink*/}\r\n            {/*        to=\"/\"*/}\r\n            {/*        className={`menu-item ${({isActive}) => isActive ? \"active\" : \"\"}`}*/}\r\n            {/*    >*/}\r\n            {/*        <div className=\"icon\">*/}\r\n            {/*            <div className=\"icons house\"/>*/}\r\n            {/*        </div>*/}\r\n            {/*    </NavLink>*/}\r\n\r\n            {/*    <NavLink*/}\r\n            {/*        to=\"/history\"*/}\r\n            {/*        className={`menu-item ${({isActive}) => isActive ? \"active\" : \"\"}`}*/}\r\n            {/*    >*/}\r\n            {/*        <div className=\"icon\">*/}\r\n            {/*            <div className=\"icons history\"/>*/}\r\n            {/*        </div>*/}\r\n            {/*    </NavLink>*/}\r\n\r\n            {/*    <NavLink*/}\r\n            {/*        to=\"/settings\"*/}\r\n            {/*        className={`menu-item ${({isActive}) => isActive ? \"active\" : \"\"}`}*/}\r\n            {/*    >*/}\r\n            {/*        <div className=\"icon\">*/}\r\n            {/*            <div className=\"icons settings\"/>*/}\r\n            {/*        </div>*/}\r\n            {/*    </NavLink>*/}\r\n\r\n            {/*    <NavLink*/}\r\n            {/*        to=\"/profile\"*/}\r\n            {/*        className={`menu-item ${({isActive}) => isActive ? \"active\" : \"\"}`}*/}\r\n            {/*    >*/}\r\n            {/*        <div className=\"icon\">*/}\r\n            {/*            <div className=\"icons profile\"/>*/}\r\n            {/*        </div>*/}\r\n            {/*    </NavLink>*/}\r\n\r\n            {/*</div>*/}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DashboardMobile;\r\n","import {useEffect, useState} from \"react\";\r\nimport {Route, Routes, NavLink} from \"react-router-dom\";\r\nimport {userPageRoutes} from \"../../routes/Routes\";\r\nimport i18next from \"i18next\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport \"./style.scss\";\r\nimport Modal from \"../modal/Modal\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {showModals} from \"../../redux/ModalContent\";\r\nimport Alerts from \"../alerts/Alerts\";\r\nimport DashboardMobile from \"../dashboard-mobile/DashboardMobile\";\r\nimport axios from \"axios\";\r\n\r\n\r\nconst Dashboard = () => {\r\n    const baseUrl = useSelector((store) => store.baseUrl.data)\r\n    const navigate = useNavigate();\r\n    const {t} = useTranslation();\r\n    const dispatch = useDispatch();\r\n    const [dropdownShow, setDropdownShow] = useState(false);\r\n    const language = [\r\n        {\r\n            code: \"uz\",\r\n            name: \"UZ\",\r\n            country_code: \"uz\",\r\n        },\r\n        {\r\n            code: \"en\",\r\n            name: \"EN\",\r\n            country_code: \"en\",\r\n        },\r\n        {\r\n            code: \"ru\",\r\n            name: \"RU\",\r\n            country_code: \"ru\",\r\n        },\r\n    ];\r\n\r\n\r\n    useEffect(() => {\r\n        axios.get(`${baseUrl}api/client/`, {\r\n            headers: {\r\n                Authorization: `Token ${localStorage.getItem(\"token\")}`,\r\n            },\r\n        }).then((response) => {\r\n        }).catch((error) => {\r\n            if (error.response.statusText == \"Unauthorized\") {\r\n                window.location.pathname = \"/\";\r\n                localStorage.removeItem(\"token\");\r\n                localStorage.removeItem(\"userId\");\r\n            }\r\n        });\r\n    }, []);\r\n\r\n\r\n    const changeLanguage = (code) => {\r\n        localStorage.setItem(\"lng\", code);\r\n        i18next.changeLanguage(code);\r\n        setDropdownShow((prevState) => (prevState = false));\r\n    };\r\n\r\n    const showModalContent = () => {\r\n        dispatch(showModals({show: true, status: \"log-out\"}));\r\n    };\r\n\r\n    return (<div className=\"dashboard-main-container\">\r\n            <Modal/>\r\n            <Alerts/>\r\n            <div className=\"desktop-dashboard-container\">\r\n                <div className=\"left-side\">\r\n                    <div className=\"logo-box\">\r\n                        <img onClick={() => navigate(\"/\")} className=\"desctop-logo\" src=\"./images/logo.png\" alt=\"\"/>\r\n                        <img onClick={() => navigate(\"/\")} className=\"mobile-logo\" src=\"./images/logo-green.png\"\r\n                             alt=\"\"/>\r\n                        <div className=\"name\">{t(\"text-main\")}</div>\r\n                    </div>\r\n\r\n                    <div className=\"menu-box\">\r\n                        <NavLink\r\n                            to=\"/\"\r\n                            className={`menu-item ${({isActive}) =>\r\n                                isActive ? \"active\" : \"\"}`}\r\n                        >\r\n                            <div className=\"icon\">\r\n                                <div className=\"icons house\"/>\r\n                            </div>\r\n                            <div className=\"name\">{t(\"nav-home\")}</div>\r\n                        </NavLink>\r\n\r\n                        <NavLink\r\n                            to=\"/history\"\r\n                            className={`menu-item ${({isActive}) =>\r\n                                isActive ? \"active\" : \"\"}`}\r\n                        >\r\n                            <div className=\"icon\">\r\n                                <div className=\"icons history\"/>\r\n                            </div>\r\n                            <div className=\"name\">{t(\"nav-history\")}</div>\r\n                        </NavLink>\r\n\r\n                        <div className=\"menu-item\">\r\n                            <div className=\"icon\">\r\n                                <div className=\"icons settings\"/>\r\n                            </div>\r\n                            <div className=\"name-disablet\">{t(\"nav-settings\")}</div>\r\n                        </div>\r\n\r\n                        <NavLink\r\n                            to=\"/profile\"\r\n                            className={`menu-item ${({isActive}) =>\r\n                                isActive ? \"active\" : \"\"}`}\r\n                        >\r\n                            <div className=\"icon\">\r\n                                <div className=\"icons profile\"/>\r\n                            </div>\r\n                            <div className=\"name\">{t(\"nav-profile\")}</div>\r\n                        </NavLink>\r\n                    </div>\r\n                </div>\r\n                <div className=\"right-side\">\r\n                    <div className=\"top-side\">\r\n                        <div></div>\r\n                        <div className=\"top-box\">\r\n                            <div onClick={() => navigate(\"/news\")} className=\"notification\">\r\n                                <img src=\"./images/bell.png\" alt=\"bell\"/>\r\n                                {/*<div className=\"count\">6</div>*/}\r\n                            </div>\r\n\r\n                            <div className=\"language\">\r\n                                <div className=\"dropdown\">\r\n                                    <div\r\n                                        onClick={() => setDropdownShow((prevState) => !prevState)}\r\n                                        className=\"dropdown-header\"\r\n                                    >\r\n                                        {language.map((item, index) => {\r\n                                            return (\r\n                                                <div key={index}>\r\n                                                    {i18next.language === item.code ? item.name : \"\"}\r\n                                                </div>\r\n                                            );\r\n                                        })}\r\n                                    </div>\r\n\r\n                                    {dropdownShow && (\r\n                                        <div className=\"dropdown-menu\">\r\n                                            {language.map(({code, name, country_code}) => (\r\n                                                <div\r\n                                                    key={country_code}\r\n                                                    onClick={() => changeLanguage(code)}\r\n                                                    className=\"menu-item\"\r\n                                                >\r\n                                                    {name}\r\n                                                </div>\r\n                                            ))}\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div onClick={showModalContent} className=\"log-out\">\r\n                                <img src=\"./images/sign-out.png\" alt=\"sign-out\"/>\r\n                                {t(\"log-out\")}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"bottom-side\">\r\n                        <Routes>\r\n                            {userPageRoutes.map((route, index) => (\r\n                                <Route key={index} {...route} />\r\n                            ))}\r\n                        </Routes>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"mobile-dashboard-container\">\r\n                <DashboardMobile/>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n","import {useEffect} from \"react\";\r\n\r\nexport const useOnKeyPress = (callback,targetKey) =>{\r\n    useEffect(()=>{\r\n        const keyPressHandler = (event)=>{\r\n            if (event.key === targetKey){\r\n                callback()\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown',keyPressHandler);\r\n        return () =>{\r\n            window.removeEventListener('keydown', keyPressHandler)\r\n        }\r\n    },[callback, targetKey]);\r\n};","import PhoneInput from 'react-phone-number-input'\r\nimport AuthCode from \"react-auth-code-input\";\r\nimport axios from \"axios\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {useOnKeyPress} from \"./useOnKeyPress\";\r\nimport \"./style.scss\"\r\nimport Alerts from \"../alerts/Alerts\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport {delAlert, addAlert} from \"../../redux/AlertsBox\"\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\n\r\nconst Login = () => {\r\n    const {t} = useTranslation();\r\n    const baseUrl = useSelector((store) => store.baseUrl.data)\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch()\r\n    const [phone, setPhone] = useState(\"\")\r\n    const [code, setCode] = useState(\"\")\r\n    const [checkCode, setCheckCode] = useState(false)\r\n    const [minutes, setMinutes] = useState(0)\r\n    const [seconds, setSeconds] = useState(60)\r\n\r\n    const resetTimer = () => {\r\n        setMinutes(0)\r\n        setSeconds(59)\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        const interval = setInterval(() => {\r\n            if (seconds > 0) {\r\n                setSeconds(seconds - 1)\r\n            }\r\n            if (seconds === 0) {\r\n                if (minutes === 0) {\r\n                    clearInterval(interval)\r\n                } else {\r\n                    setSeconds(60)\r\n                    setMinutes(minutes - 1)\r\n                }\r\n            }\r\n        }, 1000)\r\n\r\n        return () => {\r\n            clearInterval(interval)\r\n        }\r\n\r\n    }, [checkCode ? seconds : null])\r\n\r\n    const getCodeValue = (e) => {\r\n        setCode(e)\r\n    }\r\n    const HandleLogin = () => {\r\n        let user = {\r\n            phone: phone, user_type: \"Client\"\r\n        };\r\n        axios.post(`${baseUrl}api/login/`, user).then((response) => {\r\n            localStorage.setItem(\"userId\", response.data.user);\r\n            setCheckCode(prevState => true)\r\n\r\n            if (checkCode) {\r\n                resetTimer()\r\n            }\r\n        }).catch((error) => {\r\n            if (error.response.status === 404) {\r\n                let idAlert = Date.now()\r\n                let alert = {\r\n                    id: idAlert, text: t(\"alert4\"), img: \"./images/yellow.svg\",color:\"#FFFAEA\"\r\n                }\r\n                dispatch(addAlert(alert))\r\n                setTimeout(() => {\r\n                    dispatch(delAlert(idAlert))\r\n                }, 5000)\r\n            }\r\n        });\r\n\r\n    };\r\n    const CheckCode = () => {\r\n        axios.post(`${baseUrl}api/verify/`, {\r\n            user: localStorage.getItem(\"userId\"), number: code\r\n        }).then((response) => {\r\n            localStorage.setItem(\"token\", response.data.token);\r\n            navigate(\"/\")\r\n            window.location.reload()\r\n        }).catch((error) => {\r\n            if (error.response.status === 404) {\r\n\r\n                let idAlert = Date.now()\r\n                let alert = {\r\n                    id: idAlert, text: t(\"alert5\"), img: \"./images/yellow.svg\",color:\"#FFFAEA\"\r\n                }\r\n                dispatch(addAlert(alert))\r\n                setTimeout(() => {\r\n                    dispatch(delAlert(idAlert))\r\n                }, 5000)\r\n            }\r\n        });\r\n    };\r\n\r\n    useOnKeyPress(checkCode ? CheckCode : HandleLogin, 'Enter');\r\n\r\n    return <div className=\"login-container\">\r\n        <Alerts/>\r\n        <div className=\"left\">\r\n            <div className=\"sloy\">\r\n                <img src=\"./images/white-logo.png\" alt=\"white-logo\"/>\r\n            </div>\r\n        </div>\r\n        <div className=\"right\">\r\n            <div className=\"title-login\">\r\n                {t(\"button5\")}\r\n            </div>\r\n\r\n            <div className=\"form\">\r\n\r\n                <div className=\"inputs\">\r\n                    <label htmlFor=\"phone\" className=\"label-form\">{t(\"logintext\")}</label>\r\n                    <PhoneInput\r\n                        id=\"phone\"\r\n                        international\r\n                        defaultCountry=\"UZ\"\r\n                        value={phone}\r\n                        onChange={setPhone}/>\r\n                </div>\r\n\r\n                {checkCode ? <button disabled={phone === \"\" || phone === undefined || seconds > 0 || minutes > 0}\r\n                                     onClick={HandleLogin}\r\n                                     className={seconds > 0 || minutes > 0 || phone === \"\" || phone === undefined ?\r\n                                         \"login-btn-disablet\" : \"login-btn\"}>\r\n\r\n                    {t(\"logintext4\")}\r\n\r\n                </button> : <button disabled={phone === \"\" || phone === undefined}\r\n                                    onClick={HandleLogin}\r\n                                    className={phone === \"\" || phone === undefined ? \"login-btn-disablet\" : \"login-btn\"}>\r\n                    {t(\"logintext3\")}\r\n                </button>}\r\n\r\n            </div>\r\n\r\n            {\r\n                checkCode &&\r\n                <div className=\"coundown\">\r\n                    <div className=\"count\">\r\n                        <img src=\"./images/time.png\" alt=\"\"/>\r\n                        {minutes < 10 ? `0${minutes}` : minutes}:\r\n                        {seconds < 10 ? `0${seconds}` : seconds}\r\n                    </div>\r\n                </div>\r\n            }\r\n\r\n            <div className=\"form-verify\">\r\n                {checkCode && <>\r\n                    <div className=\"inputs-verify-code\">\r\n                        <label htmlFor=\"phone\" className=\"label-form\">{t(\"logintext\")}</label>\r\n                        <AuthCode allowedCharacters='numeric' length=\"5\" onChange={getCodeValue}/>\r\n                    </div>\r\n                    <button disabled={code.trim().length < 5} onClick={CheckCode}\r\n                            className={code.trim().length < 5 ? \"login-btn-disablet\" : \"login-btn\"}>\r\n                        {t(\"button5\")}\r\n                    </button>\r\n                </>}\r\n            </div>\r\n\r\n            <div className=\"text-register\">\r\n                <div className=\"label-text\">\r\n                    {t(\"registertext1\")}\r\n                </div>\r\n                <span onClick={() => navigate(\"/register\")}>{t(\"button6\")}</span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Login","import {useDispatch, useSelector} from \"react-redux\";\r\nimport PhoneInput from 'react-phone-number-input'\r\nimport AuthCode from \"react-auth-code-input\";\r\nimport axios from \"axios\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {useOnKeyPress} from \"./useOnKeyPress\";\r\nimport \"./style.scss\"\r\nimport {addAlert, delAlert} from \"../../redux/AlertsBox\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport Alerts from \"../alerts/Alerts\";\r\n\r\nconst Register = () => {\r\n    const {t} = useTranslation();\r\n    const dispatch = useDispatch()\r\n    const baseUrl = useSelector((store) => store.baseUrl.data)\r\n    const navigate = useNavigate();\r\n    const [first_name, setFirst_name] = useState(\"\")\r\n    const [last_name, setLast_name] = useState(\"\")\r\n    const [phone, setPhone] = useState(\"\")\r\n    const [code, setCode] = useState(\"\")\r\n    const [checkCode, setCheckCode] = useState(false)\r\n    const [minutes, setMinutes] = useState(0)\r\n    const [seconds, setSeconds] = useState(60)\r\n    const [checkVerify, setCheckVerify] = useState(false)\r\n\r\n    const resetTimer = () => {\r\n        setMinutes(0)\r\n        setSeconds(59)\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        const interval = setInterval(() => {\r\n            if (seconds > 0) {\r\n                setSeconds(seconds - 1)\r\n            }\r\n            if (seconds === 0) {\r\n                if (minutes === 0) {\r\n                    clearInterval(interval)\r\n                } else {\r\n                    setSeconds(60)\r\n                    setMinutes(minutes - 1)\r\n                }\r\n            }\r\n        }, 1000)\r\n\r\n        return () => {\r\n            clearInterval(interval)\r\n        }\r\n\r\n    }, [checkCode ? seconds : null])\r\n    const getCodeValue = (e) => {\r\n        setCode(e)\r\n    }\r\n    const getFirstName = (e) => {\r\n        setFirst_name(e.target.value)\r\n    }\r\n    const getLastName = (e) => {\r\n        setLast_name(e.target.value)\r\n    }\r\n    const HandleLogin = () => {\r\n        let idAlert = Date.now()\r\n        let user = {\r\n            first_name,\r\n            last_name,\r\n            phone,\r\n            user_type: \"Client\"\r\n        };\r\n\r\n        axios.post(`${baseUrl}api/register/`, user).then((response) => {\r\n\r\n            if (response.data.user) {\r\n                localStorage.setItem(\"userId\", response.data.user);\r\n                setCheckCode(prevState => true)\r\n                if (checkCode) {\r\n                    resetTimer()\r\n                }\r\n            } else {\r\n                let alert = {\r\n                    id: idAlert, text: t(\"alert4\"), img: \"./images/yellow.svg\",color:\"#FFFAEA\"\r\n                }\r\n                dispatch(addAlert(alert))\r\n                setTimeout(() => {\r\n                    dispatch(delAlert(idAlert))\r\n                }, 5000)\r\n            }\r\n\r\n        }).catch((error) => {\r\n            if (error.response.status === 400) {\r\n                let idAlert = Date.now()\r\n                let alert = {\r\n                    id: idAlert,\r\n                    text: t(\"alert4\"),\r\n                    img: \"./images/yellow.svg\",\r\n                    color:\"#FFFAEA\"\r\n                }\r\n                dispatch(addAlert(alert))\r\n                setTimeout(() => {\r\n                    dispatch(delAlert(idAlert))\r\n                }, 5000)\r\n            }\r\n        });\r\n    };\r\n    const CheckCode = () => {\r\n        axios.post(`${baseUrl}api/verify/`, {\r\n            user: localStorage.getItem(\"userId\"),\r\n            number: code\r\n        }).then((response) => {\r\n\r\n            localStorage.setItem(\"token\", response.data.token);\r\n            navigate(\"/\")\r\n            window.location.reload()\r\n\r\n        }).catch((error) => {\r\n\r\n            if (error.response.status === 404) {\r\n                let idAlert = Date.now()\r\n                let alert = {\r\n                    id: idAlert,\r\n                    text: t(\"alert5\"),\r\n                    img: \"./images/yellow.svg\",\r\n                    color:\"#FFFAEA\"\r\n                }\r\n                dispatch(addAlert(alert))\r\n                setTimeout(() => {\r\n                    dispatch(delAlert(idAlert))\r\n                }, 5000)\r\n            }\r\n        });\r\n    };\r\n\r\n    useOnKeyPress(checkCode ? CheckCode : HandleLogin, 'Enter');\r\n\r\n    return <div className=\"register-container\">\r\n        <Alerts/>\r\n        <div className=\"left\">\r\n            <div className=\"sloy\">\r\n                <img src=\"./images/white-logo.png\" alt=\"white-logo\"/>\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"right\">\r\n            <div className=\"title-login\">\r\n                {t(\"button6\")}\r\n            </div>\r\n\r\n            <div className=\"form\">\r\n                <div className=\"register-inputs\">\r\n                    <label htmlFor=\"first_name\" className=\"label-form\">{t(\"registertext2\")}</label>\r\n                    <input onChange={getFirstName} id=\"first_name\" type=\"text\"/>\r\n\r\n                    <label htmlFor=\"phone\" className=\"label-form\">{t(\"registertext3\")}</label>\r\n                    <input onChange={getLastName} id=\"last_name\" type=\"text\"/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form\">\r\n\r\n                <div className=\"inputs\">\r\n                    <label htmlFor=\"phone\" className=\"label-form\">\r\n                        {t(\"logintext\")}\r\n                    </label>\r\n                    <PhoneInput\r\n                        id=\"phone\"\r\n                        international\r\n                        defaultCountry=\"UZ\"\r\n                        value={phone}\r\n                        onChange={setPhone}/>\r\n                </div>\r\n\r\n                {checkCode ? <button\r\n                    disabled={phone === \"\" || phone === undefined || !first_name.trim().length > 0 || !last_name.trim().length > 0 || seconds > 0 || minutes > 0}\r\n                    onClick={HandleLogin}\r\n                    className={phone === \"\" || phone === undefined || !first_name.trim().length > 0 || !last_name.trim().length > 0 || seconds > 0 || minutes > 0 ?\r\n                        \"login-btn-disablet\" : \"login-btn\"}>\r\n\r\n                    {t(\"logintext4\")}\r\n\r\n                </button> : <button\r\n                    disabled={phone === \"\" || phone === undefined || !first_name.trim().length > 0 || !last_name.trim().length > 0}\r\n                    onClick={HandleLogin}\r\n                    className={phone === \"\" || phone === undefined || !first_name.trim().length > 0 || !last_name.trim().length > 0 ?\r\n                        \"login-btn-disablet\" : \"login-btn\"}>\r\n                    {t(\"logintext3\")}\r\n                </button>}\r\n\r\n            </div>\r\n\r\n            {\r\n                checkCode &&\r\n                <div className=\"coundown\">\r\n                    <div className=\"count\">\r\n                        <img src=\"./images/time.png\" alt=\"\"/>\r\n                        {minutes < 10 ? `0${minutes}` : minutes}:\r\n                        {seconds < 10 ? `0${seconds}` : seconds}\r\n                    </div>\r\n                </div>\r\n            }\r\n\r\n            {\r\n                checkCode &&\r\n                <div className=\"check-box\">\r\n                    <div className=\"checkbox-wrapper-13\">\r\n                        <input onChange={(e) => {\r\n                            setCheckVerify(prevState => !prevState)\r\n                        }} id=\"c1-13\" type=\"checkbox\"/>\r\n                    </div>\r\n                    <label htmlFor=\"c1-13\">\r\n                        Roʻyxatdan oʻtish orqali siz bizning maxfiylik siyosatimiz bilan bogʻliq shartlarimizga rozilik\r\n                        bildirasiz.\r\n                    </label>\r\n                </div>\r\n            }\r\n\r\n\r\n            <div className=\"form-verify\">\r\n                {\r\n                    checkCode && <>\r\n                        <div className=\"inputs-verify-code\">\r\n                            <label htmlFor=\"phone\" className=\"label-form\">{t(\"logintext2\")}</label>\r\n                            <AuthCode allowedCharacters='numeric' length=\"5\" onChange={getCodeValue}/>\r\n                        </div>\r\n\r\n                        <button disabled={checkVerify === false || code.trim().length < 5} onClick={CheckCode}\r\n                                className={checkVerify === false || code.trim().length < 5 ? \"login-btn-disablet\" : \"login-btn\"}>\r\n                            {t(\"button6\")}\r\n                        </button>\r\n                    </>\r\n                }\r\n            </div>\r\n\r\n            <div className=\"text-register\">\r\n                <div className=\"label-text\">{t(\"registertext4\")}</div>\r\n                <span onClick={() => navigate(\"/\")}> {t(\"button5\")}</span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Register","import {useEffect} from \"react\";\r\n\r\nexport const useOnKeyPress = (callback,targetKey) =>{\r\n    useEffect(()=>{\r\n        const keyPressHandler = (event)=>{\r\n            if (event.key === targetKey){\r\n                callback()\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown',keyPressHandler);\r\n        return () =>{\r\n            window.removeEventListener('keydown', keyPressHandler)\r\n        }\r\n    },[callback, targetKey]);\r\n};","export const GOOGLE_MAPS_API_KEY = 'AIzaSyAT1gB8sob8_piFwfeu3AaTL15yHyjuc30'","import {useState, useMemo, useEffect} from \"react\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {GoogleMap, Marker, useLoadScript} from \"@react-google-maps/api\";\r\nimport {GOOGLE_MAPS_API_KEY} from \"./googleMapsApi\";\r\nimport \"./style.scss\";\r\nimport i18next from \"i18next\";\r\nimport Loader from \"../loader/Loader\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport {addAlert, delAlert} from \"../../redux/AlertsBox\";\r\nimport axios from \"axios\";\r\nimport {showModals} from \"../../redux/ModalContent\";\r\nimport {getOrders} from \"../../redux/Orders\";\r\n\r\nconst libraries = [\"places\"];\r\n\r\nconst MapBoxMobile = () => {\r\n    const baseUrl = useSelector((store) => store.baseUrl.data);\r\n    const navigate = useNavigate();\r\n    const {t} = useTranslation();\r\n    const [center, setCenter] = useState();\r\n    const [user, setUser] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n    const activeOrders = useSelector((store) => store.Orders.activeOrders);\r\n    const drivers = useSelector((store) => store.DriversList.data);\r\n    const Activedrivers = useSelector((store) => store.ActiveDriversList.data);\r\n\r\n    useEffect(() => {\r\n        navigator.geolocation.getCurrentPosition((position) => {\r\n            const {latitude, longitude} = position.coords;\r\n            let locMy = {lat: latitude, lng: longitude};\r\n            setCenter(locMy);\r\n        });\r\n        dispatch(getOrders());\r\n        axios.get(`${baseUrl}api/client/`, {\r\n                headers: {\r\n                    Authorization: `Token ${localStorage.getItem(\"token\")}`,\r\n                },\r\n            })\r\n            .then((response) => {\r\n                setUser(response);\r\n            })\r\n            .catch((error) => {\r\n                if (error.response.statusText == \"Unauthorized\") {\r\n                    window.location.pathname = \"/\";\r\n                    localStorage.removeItem(\"token\");\r\n                    localStorage.removeItem(\"userId\");\r\n                }\r\n            });\r\n    }, []);\r\n\r\n    const {isLoaded} = useLoadScript({\r\n        googleMapsApiKey: GOOGLE_MAPS_API_KEY, libraries: libraries, language: i18next.language,\r\n    });\r\n\r\n    const options = useMemo(() => ({\r\n        disableDefaultUI: true, clickableIcons: false,\r\n    }), []);\r\n\r\n    const postOrder = () => {\r\n        if (user.is_block) {\r\n            let idAlert = Date.now();\r\n            let alert = {\r\n                id: idAlert, text: t(\"block\"), img: \"./images/red.svg\", color:\"#FFEDF1\"\r\n            };\r\n            dispatch(addAlert(alert));\r\n            setTimeout(() => {\r\n                dispatch(delAlert(idAlert));\r\n            }, 5000);\r\n        } else navigate(\"/post-order\");\r\n    };\r\n\r\n    const showInfo = (status) => {\r\n        if (drivers.length > 0 && status === \"drivers\") dispatch(showModals({show: true, status: status}));\r\n\r\n        if (activeOrders.length > 0 && status === \"active-orders\") dispatch(showModals({\r\n            show: true,\r\n            status: \"active-orders\"\r\n        }));\r\n    };\r\n\r\n    const truckIcon = {\r\n        url: \"./images/location-pin-truck.png\", scaledSize: {width: 60, height: 60},\r\n    };\r\n\r\n    if (!isLoaded) return <Loader/>;\r\n    return (<div className=\"map-container\">\r\n\r\n        <div className=\"header\">\r\n            <div></div>\r\n            <div className=\"title\">\r\n                {t(\"nav-home\")}\r\n            </div>\r\n\r\n            <div onClick={() => navigate(\"/news\")} className=\"icon-news\">\r\n                <img src=\"./images/news.png\" alt=\"\"/>\r\n            </div>\r\n        </div>\r\n\r\n        <GoogleMap\r\n            zoom={5}\r\n            center={center}\r\n            options={options}\r\n            mapContainerClassName=\"map\"\r\n        >\r\n            <div className=\"icons\">\r\n                <div\r\n                    onClick={() => showInfo(\"drivers\")}\r\n                    className=\"icon-active-drivers\"\r\n                >\r\n                    <img src=\"./images/truck.png\" alt=\"truck\"/>\r\n                    <div className=\"count\">{drivers.length}</div>\r\n                </div>\r\n\r\n                <div\r\n                    onClick={() => showInfo(\"active-orders\")}\r\n                    className=\"icon-active-orders\"\r\n                >\r\n                    <img src=\"./images/box.png\" alt=\"truck\"/>\r\n                    <div className=\"count\">{activeOrders.length}</div>\r\n                </div>\r\n            </div>\r\n            \r\n            {Activedrivers.length >= 0 ? (<>\r\n                {Activedrivers.map((item) => {\r\n                    return (<Marker\r\n                        key={item.driver}\r\n                        icon={truckIcon}\r\n                        position={{\r\n                            lat: Number(item.latitude), lng: Number(item.longitude),\r\n                        }}\r\n                        onClick={() => dispatch(showModals({show: true, status: \"active-driver\", item}))}\r\n                    />);\r\n                })}\r\n            </>) : (\"\")}\r\n\r\n            <div className=\"bottom-btn\">\r\n                <div onClick={postOrder} className=\"post-order\">\r\n                    {t(\"post-order\")}\r\n                </div>\r\n            </div>\r\n        </GoogleMap>\r\n\r\n    </div>);\r\n};\r\n\r\nexport default MapBoxMobile;\r\n","import {useState, useMemo, useEffect} from \"react\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {GoogleMap, Marker, useLoadScript} from \"@react-google-maps/api\";\r\nimport {GOOGLE_MAPS_API_KEY} from \"./googleMapsApi\";\r\nimport \"./style.scss\";\r\nimport i18next from \"i18next\";\r\nimport Loader from \"../loader/Loader\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport {addAlert, delAlert} from \"../../redux/AlertsBox\";\r\nimport axios from \"axios\";\r\nimport {showModals} from \"../../redux/ModalContent\";\r\nimport {getOrders} from \"../../redux/Orders\";\r\nimport MapBoxMobile from \"../map-mobile/MapBoxMobile\";\r\n\r\nconst libraries = [\"places\"];\r\n\r\nconst MapBox = () => {\r\n    const baseUrl = useSelector((store) => store.baseUrl.data);\r\n    const navigate = useNavigate();\r\n    const {t} = useTranslation();\r\n    const [center, setCenter] = useState();\r\n    const [user, setUser] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n    const activeOrders = useSelector((store) => store.Orders.activeOrders);\r\n    const drivers = useSelector((store) => store.DriversList.data);\r\n    const Activedrivers = useSelector((store) => store.ActiveDriversList.data);\r\n\r\n    useEffect(() => {\r\n\r\n        navigator.geolocation.getCurrentPosition((position) => {\r\n            const {latitude, longitude} = position.coords;\r\n            let locMy = {lat: latitude, lng: longitude};\r\n            setCenter(locMy);\r\n        });\r\n        dispatch(getOrders());\r\n\r\n        axios.get(`${baseUrl}api/client/`, {\r\n                headers: {\r\n                    Authorization: `Token ${localStorage.getItem(\"token\")}`,\r\n                },\r\n            }).then((response) => {\r\n                setUser(response);\r\n            }).catch((error) => {\r\n                if (error.response.statusText == \"Unauthorized\") {\r\n                    window.location.pathname = \"/\";\r\n                    localStorage.removeItem(\"token\");\r\n                    localStorage.removeItem(\"userId\");\r\n                }\r\n            });\r\n    }, []);\r\n\r\n    const {isLoaded} = useLoadScript({\r\n        googleMapsApiKey: GOOGLE_MAPS_API_KEY, libraries: libraries, language: i18next.language,\r\n    });\r\n\r\n    const options = useMemo(() => ({\r\n        disableDefaultUI: false, clickableIcons: false,\r\n    }), []);\r\n\r\n    const postOrder = () => {\r\n        if (user.is_block) {\r\n            let idAlert = Date.now();\r\n            let alert = {\r\n                id: idAlert, text: t(\"block\"), img: \"./images/red.svg\", color:\"#FFEDF1\"\r\n            };\r\n            dispatch(addAlert(alert));\r\n            setTimeout(() => {\r\n                dispatch(delAlert(idAlert));\r\n            }, 5000);\r\n        } else navigate(\"/post-order\");\r\n    };\r\n\r\n    const showInfo = (status) => {\r\n        if (drivers.length > 0 && status === \"drivers\") dispatch(showModals({show: true, status: status}));\r\n\r\n        if (activeOrders.length > 0 && status === \"active-orders\") dispatch(showModals({\r\n            show: true,\r\n            status: \"active-orders\"\r\n        }));\r\n    };\r\n\r\n    const truckIcon = {\r\n        url: \"./images/location-pin-truck.png\", scaledSize: {width: 70, height: 70},\r\n    };\r\n\r\n    if (!isLoaded) return <Loader/>;\r\n    return (<div className=\"map-container\">\r\n\r\n        <div className=\"map-box-desktop\">\r\n\r\n            <div className=\"header\">\r\n                <div\r\n                    onClick={() => dispatch(showModals({show: true, status: \"active-driver\"}))}\r\n                    className=\"title\"\r\n                >\r\n                    {t(\"nav-home\")}\r\n                </div>\r\n\r\n                <div className=\"icons\">\r\n                    <div\r\n                        onClick={() => showInfo(\"drivers\")}\r\n                        className=\"icon-active-drivers\"\r\n                    >\r\n                        <img src=\"./images/truck.png\" alt=\"truck\"/>\r\n                        <div className=\"count\">{drivers.length}</div>\r\n                    </div>\r\n\r\n                    <div\r\n                        onClick={() => showInfo(\"active-orders\")}\r\n                        className=\"icon-active-orders\"\r\n                    >\r\n                        <img src=\"./images/box.png\" alt=\"truck\"/>\r\n                        <div className=\"count\">{activeOrders.length}</div>\r\n                    </div>\r\n\r\n                    <div onClick={postOrder} className=\"post-order\">\r\n                        {t(\"post-order\")}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <GoogleMap\r\n                zoom={10}\r\n                center={center}\r\n                options={options}\r\n                mapContainerClassName=\"map\"\r\n            >\r\n\r\n                {Activedrivers.length >= 0 ? (<>\r\n                    {Activedrivers.map((item) => {\r\n                        return (<Marker\r\n                            key={item.driver}\r\n                            icon={truckIcon}\r\n                            position={{\r\n                                lat: Number(item.latitude), lng: Number(item.longitude),\r\n                            }}\r\n                            onClick={() => dispatch(showModals({show: true, status: \"active-driver\", item}))}\r\n                        />);\r\n                    })}\r\n                </>) : (\"\")}\r\n\r\n            </GoogleMap>\r\n\r\n        </div>\r\n\r\n        <div className=\"map-box-mobile\">\r\n            <MapBoxMobile/>\r\n        </div>\r\n\r\n    </div>);\r\n};\r\n\r\nexport default MapBox;\r\n","export const GOOGLE_MAPS_API_KEY = 'AIzaSyAT1gB8sob8_piFwfeu3AaTL15yHyjuc30'","import {useEffect, useRef, useState, useMemo, useContext} from \"react\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport {addAlert, delAlert} from \"../../redux/AlertsBox\";\r\nimport \"./style.scss\";\r\nimport i18next from \"i18next\";\r\nimport Loader from \"../loader/Loader\";\r\nimport axios from \"axios\";\r\nimport {useFormik} from 'formik';\r\nimport {CSSTransition} from \"react-transition-group\";\r\nimport {GoogleMap, Marker, useLoadScript} from \"@react-google-maps/api\";\r\nimport {GOOGLE_MAPS_API_KEY} from './googleMapsApi';\r\nimport {webSockedContext} from \"../app/App\";\r\nimport usePlacesAutocomplete, {\r\n    getGeocode, getLatLng,\r\n} from \"use-places-autocomplete\";\r\nimport {Combobox, ComboboxInput, ComboboxOption} from \"@reach/combobox\";\r\nimport \"@reach/combobox/styles.css\";\r\nimport {getDistance} from \"../../redux/distance\";\r\nimport {getPrice} from \"../../redux/Price\";\r\nimport success from \"../app/sound/success.mp3\";\r\nimport error from \"../app/sound/error.mp3\";\r\n\r\n\r\n\r\nconst libraries = ['places'];\r\n\r\nconst PostOrder = () => {\r\n    let webSocked = useContext(webSockedContext);\r\n    const distance = useSelector((store) => store.Distance.data)\r\n    const price = useSelector((store) => store.Price.data)\r\n    const {t} = useTranslation();\r\n    const navigate = useNavigate();\r\n    const nodeRef = useRef(null);\r\n    const ref = useRef(null);\r\n    const ref2 = useRef(null);\r\n    const ref3 = useRef(null);\r\n    const dispatch = useDispatch()\r\n    const baseUrl = useSelector((store) => store.baseUrl.data)\r\n\r\n    const [categories, setCategories] = useState([])\r\n    const [trucks, setTrucks] = useState([])\r\n    const [direction, setDirection] = useState(\"\")\r\n    const [category, setCategory] = useState(\"\")\r\n    const [infoTruck, setInfoTruck] = useState(\"\")\r\n\r\n    const [nextPage, setNextPage] = useState(false)\r\n\r\n    const [cargoInfo, setCargoInfo] = useState({})\r\n    const [cargoInfoAll, setCargoInfoAll] = useState({})\r\n    const [unit, setUnit] = useState(t(\"infoWaits1\"))\r\n    const [payment_type, setPayment_type] = useState(t(\"payment1\"))\r\n    const [currency, setCurrency] = useState(\"UZS\")\r\n    const [wait_type, setWait_type] = useState(t(\"waitCount1\"))\r\n\r\n    const [modalShow, setModalShow] = useState({show: false})\r\n    const [plusInformation, setPlusInformation] = useState(false)\r\n\r\n    const [center, setCenter] = useState(null)\r\n    const [locationFrom, setLocationFrom] = useState(false)\r\n    const [locationFromAddress, setLocationFromAddress] = useState(\"\")\r\n    const [locationTo, setLocationTo] = useState(false)\r\n    const [locationCode, setLocationCode] = useState(false)\r\n    const [locationToAddress, setLocationToAddress] = useState(\"\")\r\n    const [countryCode, setCountryCode] = useState(\"\")\r\n    const [searchLocationAddress, setSearchLocationAddress] = useState(\"\")\r\n    const [selected, setSelected] = useState(null);\r\n    const [validateLocationFrom, setValidateLocationFrom] = useState(false);\r\n    const [validateLocationTo, setValidateLocationTo] = useState(false);\r\n\r\n    const validate = values => {\r\n        const errors = {};\r\n\r\n        if (!values.cargo) {\r\n            errors.cargo = 'Required';\r\n        } else if (values.cargo.length > 30) {\r\n            errors.cargo = t(\"validate1\");\r\n        }\r\n\r\n        if (!values.capacity) {\r\n            errors.capacity = 'Required';\r\n        } else if (values.capacity.length > 5) {\r\n            errors.capacity = t(\"validate2\");\r\n        } else if (isNaN(Number(values.capacity)) || Number(values.capacity) < 0) {\r\n            errors.capacity = t(\"validate3\");\r\n        }\r\n\r\n        if (!values.price && direction === \"Abroad\") {\r\n            errors.price = 'Required';\r\n        } else if (isNaN(Number(values.price))) {\r\n            errors.price = t(\"validate4\");\r\n        } else if (values.price.length >= 10) {\r\n            errors.price = t(\"validate5\");\r\n        } else if (Number(values.price) < 0) {\r\n            errors.price = t(\"validate6\");\r\n        }\r\n\r\n        if (isNaN(Number(values.number_cars))) {\r\n            errors.number_cars = t(\"validate7\");\r\n        } else if (Number(values.number_cars) > 20) {\r\n            errors.number_cars = t(\"validate8\");\r\n        }\r\n        if (Number(values.number_cars) < 0) {\r\n            errors.number_cars = t(\"validate9\");\r\n        }\r\n\r\n\r\n        if (isNaN(Number(values.wait_cost))) {\r\n            errors.wait_cost = t(\"validate4\");\r\n        } else if (Number(values.price) <= Number(values.wait_cost) && direction === \"Abroad\") {\r\n            errors.wait_cost = t(\"validate10\");\r\n        } else if (Number(values.wait_cost) < 0) {\r\n            errors.wait_cost = t(\"validate6\");\r\n        }\r\n\r\n        if (isNaN(Number(values.avans))) {\r\n            errors.avans = t(\"validate4\");\r\n        } else if (Number(values.price) <= Number(values.avans) && direction === \"Abroad\") {\r\n            errors.avans = t(\"validate11\");\r\n        } else if (Number(values.avans) < 0) {\r\n            errors.avans = t(\"validate6\");\r\n        }\r\n\r\n        return errors;\r\n    };\r\n\r\n    const [cargo, setCargo] = useState({\r\n        command: \"new_order\",\r\n        client: Number(localStorage.getItem(\"userId\")),\r\n        type: \"\",\r\n        car_category: \"\",\r\n        car_body_type: \"\",\r\n        address_from: \"\",\r\n        latitude_from: \"\",\r\n        longitude_from: \"\",\r\n        address_to: \"\",\r\n        latitude_to: \"\",\r\n        longitude_to: \"\",\r\n        payment_type: t(\"payment1\"),\r\n        unit: t(\"infoWaits1\"),\r\n        currency: \"UZS\",\r\n        wait_type: t(\"waitCount1\"),\r\n    })\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            cargo: '',\r\n            capacity: '',\r\n            price: \"\",\r\n            number_cars: 1,\r\n            load_time: \"2024-01-01T00:00\",\r\n            start_time: \"2024-01-01T00:00\",\r\n            wait_cost: \"\",\r\n            avans: \"\",\r\n        },\r\n        validate,\r\n        onSubmit: values => {\r\n            if (locationFromAddress && locationToAddress) {\r\n\r\n                if (values.start_time === \"2024-01-01T00:00\" || values.load_time === \"2024-01-01T00:00\") {\r\n                    values.start_time = \"\"\r\n                    values.load_time = \"\"\r\n                    setCargoInfo(prevState => prevState = values)\r\n                } else setCargoInfo(prevState => prevState = values)\r\n\r\n                showModalForm(\"order\", true)\r\n\r\n                if (direction !== \"Abroad\") {\r\n                    SendOrder(\"new_order\")\r\n                }\r\n\r\n            } else if (locationFromAddress === \"\" && locationToAddress === \"\") {\r\n\r\n                setValidateLocationFrom(true)\r\n                setValidateLocationTo(true)\r\n\r\n            } else if (locationFromAddress === \"\") {\r\n\r\n                setValidateLocationFrom(true)\r\n\r\n            } else if (locationToAddress === \"\") setValidateLocationTo(true)\r\n\r\n        },\r\n\r\n    });\r\n\r\n    useEffect(() => {\r\n        axios.get(`${baseUrl}api/car-category/`).then((response) => {\r\n            let re = response.data.reverse();\r\n            setCategories(re);\r\n        })\r\n    }, [])\r\n\r\n    function errorAudio() {\r\n        new Audio(error).play()\r\n    }\r\n\r\n    const getTrucks = (categoryId) => {\r\n        cargo.car_category = categoryId\r\n        setCategory(categoryId)\r\n        axios.get(`${baseUrl}api/car-category/${categoryId}`, {}).then((response) => {\r\n            setTrucks(response.data);\r\n        })\r\n    }\r\n\r\n    const getDirection = (direction) => {\r\n        cargo.type = direction\r\n        setDirection(direction)\r\n    }\r\n\r\n    const showModalForm = (status, show) => {\r\n        let modal = {\r\n            show,\r\n            status\r\n        }\r\n        setModalShow(modal)\r\n    }\r\n\r\n    const selectAddressIcon = {url: './images/address.png', scaledSize: {width: 45, height: 50}};\r\n\r\n    const PlacesAutocomplete = ({setSelected}) => {\r\n        const {\r\n            ready, value, setValue, suggestions: {status, data}, clearSuggestions,\r\n        } = usePlacesAutocomplete({\r\n            requestOptions: {\r\n                language: i18next.language,\r\n            },\r\n        });\r\n\r\n        const handleSelect = async (address) => {\r\n            const results = await getGeocode({address});\r\n            const {lat, lng} = await getLatLng(results[0]);\r\n\r\n            const url = `https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lng}&lan=en`;\r\n\r\n            axios.get(`${url}`, {\r\n                headers: {\r\n                    \"Accept-Language\": i18next.language\r\n                }\r\n            }).then((res) => {\r\n\r\n                let city = res.data.address.city;\r\n                let country = res.data.address.country;\r\n                let suburb = res.data.address.suburb;\r\n                let neighbourhood = res.data.address.neighbourhood;\r\n                let county = res.data.address.county;\r\n                let road = res.data.address.road;\r\n                let fullAddress = `${country ? country + \",\" : \"\"} ${city ? city + \",\" : \"\"} ${suburb ? suburb + \",\" : \"\"} \r\n            ${neighbourhood ? neighbourhood + \",\" : \"\"} ${county ? county + \",\" : \"\"} ${road ? road : \"\"}`\r\n\r\n                if (direction === \"OUT\") {\r\n                    if (locationToAddress || locationFromAddress ) {\r\n\r\n                        if (res.data.address[\"ISO3166-2-lvl4\"] !== locationCode && res.data.address.country_code === countryCode) {\r\n\r\n                            setSearchLocationAddress(fullAddress)\r\n                            setSelected({lat, lng})\r\n                            setCenter({lat, lng});\r\n                            setValue(address, false);\r\n                            clearSuggestions();\r\n                        } else {\r\n                            setSearchLocationAddress(\"\")\r\n                            setSelected(null)\r\n                            let idAlert = Date.now();\r\n                            let alert = {\r\n                                id: idAlert,\r\n                                text: t(\"errorLocations\"),\r\n                                img: \"./images/red.svg\",\r\n                                color: \"#FFEDF1\"\r\n                            };\r\n                            dispatch(addAlert(alert));\r\n                            errorAudio()\r\n                            setTimeout(() => {\r\n                                dispatch(delAlert(idAlert));\r\n                            }, 5000);\r\n                        }\r\n\r\n                    } else {\r\n                        setCountryCode(res.data.address.country_code)\r\n                        setSearchLocationAddress(fullAddress)\r\n                        setSearchLocationAddress(fullAddress)\r\n                        setSelected({lat, lng})\r\n                        setCenter({lat, lng});\r\n                        setValue(address, false);\r\n                        clearSuggestions();\r\n                        setLocationCode(res.data.address[\"ISO3166-2-lvl4\"])\r\n                    }\r\n                }\r\n\r\n                if (direction === \"IN\") {\r\n                    if (locationToAddress || locationFromAddress) {\r\n\r\n                        if (res.data.address[\"ISO3166-2-lvl4\"] === locationCode) {\r\n                            setSearchLocationAddress(fullAddress)\r\n                            setSearchLocationAddress(fullAddress)\r\n                            setSelected({lat, lng})\r\n                            setCenter({lat, lng});\r\n                            setValue(address, false);\r\n                            clearSuggestions();\r\n                        } else {\r\n                            setSearchLocationAddress(\"\")\r\n                            setSelected(null)\r\n                            let idAlert = Date.now();\r\n                            let alert = {\r\n                                id: idAlert,\r\n                                text: t(\"errorLocations\"),\r\n                                img: \"./images/red.svg\",\r\n                                color: \"#FFEDF1\"\r\n                            };\r\n                            dispatch(addAlert(alert));\r\n                            errorAudio()\r\n                            setTimeout(() => {\r\n                                dispatch(delAlert(idAlert));\r\n                            }, 5000);\r\n                        }\r\n\r\n                    } else {\r\n                        setSearchLocationAddress(fullAddress)\r\n                        setSelected({lat, lng})\r\n                        setCenter({lat, lng});\r\n                        setValue(address, false);\r\n                        clearSuggestions();\r\n                        setLocationCode(res.data.address[\"ISO3166-2-lvl4\"])\r\n                    }\r\n                }\r\n\r\n                if (direction === \"Abroad\") {\r\n                    if (locationToAddress || locationFromAddress) {\r\n\r\n                        if (res.data.address.country_code !== locationCode) {\r\n                            setSearchLocationAddress(fullAddress)\r\n                            setSearchLocationAddress(fullAddress)\r\n                            setSelected({lat, lng})\r\n                            setCenter({lat, lng});\r\n                            setValue(address, false);\r\n                            clearSuggestions();\r\n                        } else {\r\n                            setSearchLocationAddress(\"\")\r\n                            setSelected(null)\r\n                            let idAlert = Date.now();\r\n                            let alert = {\r\n                                id: idAlert, text: t(\"errorLocations\"), img: \"./images/red.svg\", color: \"#FFEDF1\"\r\n                            };\r\n                            dispatch(addAlert(alert));\r\n                            setTimeout(() => {\r\n                                dispatch(delAlert(idAlert));\r\n                            }, 5000);\r\n                        }\r\n\r\n                    } else {\r\n                        setSearchLocationAddress(fullAddress)\r\n                        setSearchLocationAddress(fullAddress)\r\n                        setSelected({lat, lng})\r\n                        setCenter({lat, lng});\r\n                        setValue(address, false);\r\n                        clearSuggestions();\r\n                        setLocationCode(res.data.address.country_code)\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        return (<Combobox onSelect={handleSelect}>\r\n            <ComboboxInput\r\n                value={value}\r\n                onChange={(e) => setValue(e.target.value)}\r\n                disabled={!ready}\r\n                className=\"combobox-input\"\r\n                placeholder={t(\"input1\")}\r\n            />\r\n\r\n            <div className=\"address-wrapper\">\r\n                <div className=\"list-address\">\r\n                    {status === \"OK\" && data.map(({place_id, description}) => (\r\n                        <ComboboxOption key={place_id} value={description}/>))}\r\n                </div>\r\n            </div>\r\n        </Combobox>);\r\n    };\r\n\r\n    const getAddressLocation = () => {\r\n        if (locationFrom) {\r\n            if (searchLocationAddress && selected) {\r\n                cargo.address_from = searchLocationAddress\r\n                setLocationFromAddress(searchLocationAddress)\r\n                setLocationTo(false)\r\n                setSelected(null)\r\n\r\n                cargo.latitude_from = Number(selected.lat.toString().slice(0, 9))\r\n                cargo.longitude_from = Number(selected.lng.toString().slice(0, 9))\r\n                onloadMap()\r\n                showModalForm(\"\", false)\r\n                setValidateLocationFrom(false)\r\n            } else {\r\n                let idAlert = Date.now()\r\n                let alert = {\r\n                    id: idAlert,\r\n                    text: t(\"alert7\"),\r\n                    img: \"./images/yellow.svg\",\r\n                    color: \"#FFFAEA\"\r\n                }\r\n                dispatch(addAlert(alert))\r\n                setTimeout(() => {\r\n                    dispatch(delAlert(idAlert))\r\n                }, 5000)\r\n            }\r\n\r\n        }\r\n\r\n        if (locationTo) {\r\n            if (searchLocationAddress && selected) {\r\n                cargo.address_to = searchLocationAddress\r\n                setLocationToAddress(searchLocationAddress)\r\n                setLocationFrom(false)\r\n                setSelected(null)\r\n\r\n                cargo.latitude_to = Number(selected.lat.toString().slice(0, 9))\r\n                cargo.longitude_to = Number(selected.lng.toString().slice(0, 9))\r\n                onloadMap()\r\n                showModalForm(\"\", false)\r\n                setValidateLocationTo(false)\r\n            } else {\r\n                let idAlert = Date.now()\r\n                let alert = {\r\n                    id: idAlert,\r\n                    text: t(\"alert7\"),\r\n                    img: \"./images/yellow.svg\",\r\n                    color: \"#FFFAEA\"\r\n                }\r\n                dispatch(addAlert(alert))\r\n                setTimeout(() => {\r\n                    dispatch(delAlert(idAlert))\r\n                }, 5000)\r\n            }\r\n        }\r\n\r\n        if (cargo.address_from && cargo.address_to && direction === \"Abroad\") {\r\n            let distance = {\r\n                command: \"getdistance\",\r\n                latitude_from: cargo.latitude_from,\r\n                longitude_from: cargo.longitude_from,\r\n                latitude_to: cargo.latitude_to,\r\n                longitude_to: cargo.longitude_to\r\n            }\r\n            webSocked.send(JSON.stringify(distance));\r\n        }\r\n    }\r\n    const ClicklLocation = (e) => {\r\n        let latitude = e.latLng.lat()\r\n        let longitude = e.latLng.lng()\r\n\r\n        let locMy = {lat: latitude, lng: longitude}\r\n\r\n        const url = `https://nominatim.openstreetmap.org/reverse?format=json&lat=${latitude}&lon=${longitude}&lan=en`;\r\n\r\n        axios.get(`${url}`, {\r\n            headers: {\r\n                \"Accept-Language\": i18next.language\r\n            }\r\n        }).then((res) => {\r\n\r\n            let city = res.data.address.city;\r\n            let country = res.data.address.country;\r\n            let suburb = res.data.address.suburb;\r\n            let neighbourhood = res.data.address.neighbourhood;\r\n            let county = res.data.address.county;\r\n            let road = res.data.address.road;\r\n            let fullAddress = `${country ? country + \",\" : \"\"} ${city ? city + \",\" : \"\"} ${suburb ? suburb + \",\" : \"\"} \r\n            ${neighbourhood ? neighbourhood + \",\" : \"\"} ${county ? county + \",\" : \"\"} ${road ? road : \"\"}`\r\n\r\n            if (direction === \"OUT\") {\r\n                if (locationToAddress || locationFromAddress) {\r\n\r\n                    if (res.data.address[\"ISO3166-2-lvl4\"] !== locationCode && res.data.address.country_code === countryCode) {\r\n\r\n                        setSearchLocationAddress(fullAddress)\r\n                        setSelected(locMy)\r\n                    } else {\r\n                        setSearchLocationAddress(\"\")\r\n                        setSelected(null)\r\n                        let idAlert = Date.now();\r\n                        let alert = {\r\n                            id: idAlert, text: t(\"errorLocations\"), img: \"./images/red.svg\", color: \"#FFEDF1\"\r\n                        };\r\n                        dispatch(addAlert(alert));\r\n                        errorAudio()\r\n                        setTimeout(() => {\r\n                            dispatch(delAlert(idAlert));\r\n                        }, 5000);\r\n\r\n                    }\r\n\r\n                } else {\r\n                    setCountryCode(res.data.address.country_code)\r\n                    setSearchLocationAddress(fullAddress)\r\n                    setSelected(locMy)\r\n                    setLocationCode(res.data.address[\"ISO3166-2-lvl4\"])\r\n                }\r\n            }\r\n\r\n            if (direction === \"IN\") {\r\n                if (locationToAddress || locationFromAddress) {\r\n\r\n                    if (res.data.address[\"ISO3166-2-lvl4\"] === locationCode) {\r\n                        setSearchLocationAddress(fullAddress)\r\n                        setSelected(locMy)\r\n                    } else {\r\n                        setSearchLocationAddress(\"\")\r\n                        setSelected(null)\r\n                        let idAlert = Date.now();\r\n                        let alert = {\r\n                            id: idAlert, text: t(\"errorLocations\"), img: \"./images/red.svg\", color: \"#FFEDF1\"\r\n                        };\r\n                        dispatch(addAlert(alert));\r\n                        errorAudio()\r\n                        setTimeout(() => {\r\n                            dispatch(delAlert(idAlert));\r\n                        }, 5000);\r\n\r\n                    }\r\n\r\n                } else {\r\n                    setSearchLocationAddress(fullAddress)\r\n                    setSelected(locMy)\r\n                    setLocationCode(res.data.address[\"ISO3166-2-lvl4\"])\r\n                }\r\n            }\r\n\r\n            if (direction === \"Abroad\") {\r\n                if (locationToAddress || locationFromAddress) {\r\n\r\n                    if (res.data.address.country_code !== locationCode) {\r\n                        setSearchLocationAddress(fullAddress)\r\n                        setSelected(locMy)\r\n                    } else {\r\n                        setSearchLocationAddress(\"\")\r\n                        setSelected(null)\r\n                        let idAlert = Date.now();\r\n                        let alert = {\r\n                            id: idAlert, text: t(\"errorLocations\"), img: \"./images/red.svg\", color: \"#FFEDF1\"\r\n                        };\r\n                        dispatch(addAlert(alert));\r\n                        errorAudio()\r\n                        setTimeout(() => {\r\n                            dispatch(delAlert(idAlert));\r\n                        }, 5000);\r\n                    }\r\n\r\n                } else {\r\n                    setSearchLocationAddress(fullAddress)\r\n                    setSelected(locMy)\r\n                    setLocationCode(res.data.address.country_code)\r\n                }\r\n            }\r\n\r\n        })\r\n\r\n    }\r\n\r\n    const {isLoaded} = useLoadScript({\r\n        googleMapsApiKey: GOOGLE_MAPS_API_KEY, libraries: libraries, language: i18next.language\r\n    });\r\n\r\n    const onloadMap = () => {\r\n        navigator.geolocation.getCurrentPosition(position => {\r\n            const {latitude, longitude} = position.coords;\r\n            let locMy = {lat: latitude, lng: longitude}\r\n            setCenter(locMy)\r\n        });\r\n    }\r\n\r\n    const options = useMemo(() => ({\r\n        disableDefaultUI: false, clickableIcons: false\r\n    }), []);\r\n\r\n    const SendOrder = (command) => {\r\n        let cargoInfoAll = {...formik.values, ...cargo}\r\n\r\n        if (webSocked) {\r\n            if (command === \"new_order\") {\r\n                webSocked.send(JSON.stringify(cargoInfoAll));\r\n            } else if (command === \"cancel_order\") {\r\n                let order = {\r\n                    command: command, id: price.id\r\n                };\r\n                webSocked.send(JSON.stringify(order));\r\n            } else if (command === \"confirm_order\") {\r\n                let order = {\r\n                    command: command, id: price.id\r\n                };\r\n                webSocked.send(JSON.stringify(order));\r\n            }\r\n        } else {\r\n            let idAlertError = Date.now();\r\n            let alert = {\r\n                id: idAlertError,\r\n                text: t(\"net\"),\r\n                img: \"./images/red.svg\",\r\n                color: \"#FFEDF1\"\r\n            };\r\n            dispatch(addAlert(alert));\r\n        }\r\n\r\n    };\r\n\r\n    const ConfirmOrder = () => {\r\n\r\n        if (direction !== \"Abroad\") {\r\n            SendOrder(\"confirm_order\")\r\n        } else {\r\n            cargo.distance = distance\r\n            SendOrder(\"new_order\")\r\n        }\r\n\r\n        showModalForm(\"\", false)\r\n        formik.resetForm()\r\n        setLocationFromAddress(\"\")\r\n        setLocationToAddress(\"\")\r\n        dispatch(getDistance(\"\"))\r\n        dispatch(getPrice(\"\"))\r\n        setDirection(\"\")\r\n        setCategory(\"\")\r\n        setNextPage(false)\r\n        setInfoTruck(\"\")\r\n        let resetCargo = {\r\n            command: \"new_order\",\r\n            client: Number(localStorage.getItem(\"userId\")),\r\n            type: \"\",\r\n            price:\"\",\r\n            distance:\"\",\r\n            car_category: \"\",\r\n            car_body_type: \"\",\r\n            address_from: \"\",\r\n            latitude_from: \"\",\r\n            longitude_from: \"\",\r\n            address_to: \"\",\r\n            latitude_to: \"\",\r\n            longitude_to: \"\",\r\n            payment_type: t(\"payment1\"),\r\n            unit: t(\"infoWaits1\"),\r\n            currency: \"UZS\",\r\n            wait_type: t(\"waitCount1\"),\r\n        }\r\n        setCargo(resetCargo)\r\n    }\r\n\r\n    const CancelOrder = () => {\r\n        direction !== \"Abroad\" ? SendOrder(\"cancel_order\") : showModalForm(\"\", false)\r\n        showModalForm(\"\", false)\r\n    }\r\n\r\n    if (!isLoaded) return <Loader/>\r\n    return <div className=\"post-order-container\">\r\n\r\n        <CSSTransition\r\n            in={modalShow.show}\r\n            nodeRef={nodeRef}\r\n            timeout={300}\r\n            classNames=\"alert\"\r\n            unmountOnExit\r\n        >\r\n            <div className={`modal-sloy ${modalShow.status === \"order\" ? \"align-none\" : \"\"}`}>\r\n\r\n                {modalShow.status !== \"getLocation\" &&\r\n                    <div ref={nodeRef} className=\"modal-card\">\r\n\r\n                        {modalShow.status === \"payment-type\" &&\r\n                            <div className=\"form-orders\">\r\n                                <div className=\"cancel-btn\">\r\n                                    <img onClick={() => showModalForm(\"\", false)} src=\"./images/x.png\" alt=\"\"/>\r\n                                </div>\r\n\r\n                                <div className=\"title\">\r\n                                    {t(\"info10\")}\r\n                                </div>\r\n\r\n                                <div className=\"form-order-info\">\r\n\r\n                                    <label htmlFor=\"payment_type_one\">\r\n                                        <input\r\n                                            name=\"payment_type\"\r\n                                            onChange={(e) => setPayment_type(e.target.value)}\r\n                                            id=\"payment_type_one\" type=\"radio\"\r\n                                            value={t(\"payment1\")}/>\r\n                                        <div>{t(\"payment1\")}</div>\r\n                                    </label>\r\n\r\n                                    <label htmlFor=\"payment_type_two\">\r\n                                        <input\r\n                                            onChange={(e) => setPayment_type(e.target.value)}\r\n                                            id=\"payment_type_two\" type=\"radio\"\r\n                                            name=\"payment_type\"\r\n                                            value={t(\"payment2\")}/>\r\n                                        <div>{t(\"payment2\")}</div>\r\n                                    </label>\r\n\r\n                                    <label>\r\n                                        <input\r\n                                            onChange={(e) => setPayment_type(e.target.value)}\r\n                                            id=\"payment_type_three\" type=\"radio\"\r\n                                            name=\"payment_type\"\r\n                                            value={t(\"payment3\")}/>\r\n                                        <div>{t(\"payment3\")}</div>\r\n                                    </label>\r\n\r\n                                    <div onClick={() => {\r\n                                        showModalForm(\"\", false)\r\n                                        cargo.payment_type = payment_type\r\n                                    }} className=\"success-btn\">\r\n                                        {t(\"button2\")}\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                        }\r\n\r\n                        {modalShow.status === \"cargo-weight\" &&\r\n                            <div className=\"form-orders\">\r\n                                <div className=\"cancel-btn\">\r\n                                    <img onClick={() => showModalForm(\"\", false)} src=\"./images/x.png\" alt=\"\"/>\r\n                                </div>\r\n\r\n                                <div className=\"title\">\r\n                                    {t(\"infoTruck4\")}\r\n                                </div>\r\n\r\n                                <div className=\"form-order-info\">\r\n\r\n                                    <label htmlFor=\"unit1\">\r\n                                        <input\r\n                                            name=\"unit\"\r\n                                            onChange={(e) => setUnit(e.target.value)}\r\n                                            id=\"unit1\" type=\"radio\"\r\n                                            value={t(\"infoWaits1\")}/>\r\n                                        <div>{t(\"infoWaits1\")}</div>\r\n                                    </label>\r\n\r\n                                    <label htmlFor=\"unit2\">\r\n                                        <input\r\n                                            name=\"unit\"\r\n                                            onChange={(e) => setUnit(e.target.value)}\r\n                                            id=\"unit2\" type=\"radio\"\r\n                                            value={t(\"infoWaits2\")}/>\r\n                                        <div>{t(\"infoWaits2\")}</div>\r\n                                    </label>\r\n\r\n                                    <label htmlFor=\"unit3\">\r\n                                        <input\r\n                                            name=\"unit\"\r\n                                            onChange={(e) => setUnit(e.target.value)}\r\n                                            id=\"unit3\" type=\"radio\"\r\n                                            value={t(\"infoWaits3\")}/>\r\n                                        <div>{t(\"infoWaits3\")}</div>\r\n                                    </label>\r\n\r\n                                    <label htmlFor=\"unit4\">\r\n                                        <input\r\n                                            name=\"unit\"\r\n                                            onChange={(e) => setUnit(e.target.value)}\r\n                                            id=\"unit4\" type=\"radio\"\r\n                                            value={t(\"infoWaits4\")}/>\r\n                                        <div>{t(\"infoWaits4\")}</div>\r\n                                    </label>\r\n\r\n                                    <label htmlFor=\"unit5\">\r\n                                        <input\r\n                                            name=\"unit\"\r\n                                            onChange={(e) => setUnit(e.target.value)}\r\n                                            id=\"unit5\" type=\"radio\"\r\n                                            value={t(\"infoWaits5\")}/>\r\n                                        <div>{t(\"infoWaits5\")}</div>\r\n                                    </label>\r\n\r\n                                    <label htmlFor=\"unit6\">\r\n                                        <input\r\n                                            name=\"unit\"\r\n                                            onChange={(e) => setUnit(e.target.value)}\r\n                                            id=\"unit6\" type=\"radio\"\r\n                                            value={t(\"infoWaits6\")}/>\r\n                                        <div>{t(\"infoWaits6\")}</div>\r\n                                    </label>\r\n\r\n                                    <div onClick={() => {\r\n                                        showModalForm(\"\", false)\r\n                                        cargo.unit = unit\r\n                                    }} className=\"success-btn\">\r\n                                        {t(\"button2\")}\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                        }\r\n\r\n                        {modalShow.status === \"weight-type\" &&\r\n                            <div className=\"form-orders\">\r\n                                <div className=\"cancel-btn\">\r\n                                    <img onClick={() => showModalForm(\"\", false)} src=\"./images/x.png\" alt=\"\"/>\r\n                                </div>\r\n\r\n                                <div className=\"title\">\r\n                                    {t(\"info11\")}\r\n                                </div>\r\n\r\n                                <div className=\"form-order-info\">\r\n\r\n                                    <label htmlFor=\"wait_type1\">\r\n                                        <input\r\n                                            name=\"wait_type\"\r\n                                            onChange={(e) => setWait_type(e.target.value)}\r\n                                            id=\"wait_type1\" type=\"radio\"\r\n                                            value={t(\"waitCount1\")}/>\r\n                                        <div> {t(\"waitCount1\")} </div>\r\n                                    </label>\r\n\r\n                                    <label htmlFor=\"wait_type2\">\r\n                                        <input\r\n                                            name=\"wait_type\"\r\n                                            onChange={(e) => setWait_type(e.target.value)}\r\n                                            id=\"wait_type2\" type=\"radio\"\r\n                                            value={t(\"waitCount2\")}/>\r\n                                        <div> {t(\"waitCount2\")}</div>\r\n                                    </label>\r\n\r\n                                    <div onClick={() => {\r\n                                        showModalForm(\"\", false)\r\n                                        cargo.wait_type = wait_type\r\n                                    }} className=\"success-btn\">\r\n                                        {t(\"button2\")}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n\r\n                        {modalShow.status === \"currency\" &&\r\n                            <div className=\"form-orders\">\r\n                                <div className=\"cancel-btn\">\r\n                                    <img onClick={() => showModalForm(\"\", false)} src=\"./images/x.png\" alt=\"\"/>\r\n                                </div>\r\n\r\n                                <div className=\"title\">\r\n                                    {t(\"title3\")}\r\n                                </div>\r\n\r\n                                <div className=\"form-order-info\">\r\n\r\n                                    <label htmlFor=\"currency1\">\r\n                                        <input\r\n                                            name=\"currency\"\r\n                                            onChange={(e) => setCurrency(e.target.value)}\r\n                                            id=\"currency1\" type=\"radio\"\r\n                                            value=\"UZS\"/>\r\n                                        <div> UZS</div>\r\n                                    </label>\r\n\r\n                                    <label htmlFor=\"currency2\">\r\n                                        <input\r\n                                            name=\"currency\"\r\n                                            onChange={(e) => setCurrency(e.target.value)}\r\n                                            id=\"currency2\" type=\"radio\"\r\n                                            value=\"USD\"/>\r\n                                        <div>USD</div>\r\n                                    </label>\r\n\r\n                                    <div onClick={() => {\r\n                                        showModalForm(\"\", false)\r\n                                        cargo.currency = currency\r\n                                    }} className=\"success-btn\">\r\n                                        {t(\"button2\")}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n\r\n                        {modalShow.status === \"order\" &&\r\n                            <div className=\"show-order\">\r\n                                <div className=\"cancel-btn\">\r\n                                    <img onClick={() => showModalForm(\"\", false)} src=\"./images/x.png\" alt=\"\"/>\r\n                                </div>\r\n\r\n                                <div className=\"title\">\r\n                                    {t(\"moreInfo\")}\r\n                                </div>\r\n\r\n                                <div className=\"info-direction\">\r\n                                    <div className=\"label-info\">{t(\"info1\")}</div>\r\n                                    <div className=\"value-info\">\r\n                                        {cargo.type === \"OUT\" ? t(\"direction2\") : \"\"}\r\n                                        {cargo.type === \"IN\" ? t(\"direction3\") : \"\"}\r\n                                        {cargo.type === \"Abroad\" ? t(\"direction1\") : \"\"}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"info\">\r\n                                    <div className=\"label-info\">{t(\"loc1\")}</div>\r\n                                    <div className=\"value-info\"> {cargo.address_from}</div>\r\n                                </div>\r\n\r\n                                <div className=\"info\">\r\n                                    <div className=\"label-info\">{t(\"loc3\")}</div>\r\n                                    <div className=\"value-info\"> {cargo.address_to}</div>\r\n                                </div>\r\n\r\n                                <div className=\"info\">\r\n                                    <div className=\"label-info\"> {t(\"info2\")}</div>\r\n                                    <div className=\"value-info\"> {cargoInfo.cargo}</div>\r\n                                </div>\r\n\r\n                                <div className=\"info\">\r\n                                    <div className=\"label-info\">  {t(\"info7\")}</div>\r\n                                    <div className=\"value-info\">\r\n                                        {direction !== \"Abroad\" ? price.distance : distance} km\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"info\">\r\n                                    <div className=\"label-info\"> {t(\"info10\")}</div>\r\n                                    <div className=\"value-info\">{cargo.payment_type}</div>\r\n                                </div>\r\n\r\n                                <div className=\"info\">\r\n                                    <div className=\"label-info\"> {t(\"info8\")}</div>\r\n                                    <div className=\"value-info\">\r\n                                        {cargoInfo.price ? cargoInfo.price : price.price}\r\n                                        {cargo.currency}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"info\">\r\n                                    <div className=\"label-info\"> {t(\"info3\")}</div>\r\n                                    <div className=\"value-info\"> {cargoInfo.number_cars}</div>\r\n                                </div>\r\n\r\n                                <div className=\"info\">\r\n                                    <div className=\"label-info\"> {t(\"info4\")}</div>\r\n                                    <div className=\"value-info\"> {cargoInfo.capacity} {cargo.unit}</div>\r\n                                </div>\r\n\r\n                                <div className=\"info\">\r\n                                    <div className=\"label-info\">{t(\"info5\")}</div>\r\n                                    <div className=\"value-info\">\r\n\r\n                                        {categories.map((item, index) => {\r\n                                            if (item.id === cargo.car_category) {\r\n                                                return <div key={index}>\r\n\r\n                                                    {\r\n                                                        item.name !== \"Авто Ташувчи\" ?\r\n                                                            <>\r\n                                                                {item.min_weight} - {item.max_weight} {t(\"infoWaits4\")},\r\n                                                            </> : \"\"\r\n                                                    }\r\n\r\n                                                    {item.name === \"Мини\" && t(\"tariff1\")}\r\n                                                    {item.name === \"Енгил\" && t(\"tariff2\")}\r\n                                                    {item.name === \"Ўрта\" && t(\"tariff3\")}\r\n                                                    {item.name === \"Оғир\" && t(\"tariff4\")}\r\n                                                    {item.name === \"Ўта оғир\" && t(\"tariff5\")}\r\n                                                    {item.name === \"Авто Ташувчи\" && t(\"tariff6\")}\r\n                                                </div>\r\n                                            }\r\n                                        })}\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"info\">\r\n                                    <div className=\"label-info\"> {t(\"info6\")}</div>\r\n                                    <div className=\"value-info\">\r\n                                        {trucks.map((item, index) => {\r\n                                            if (item.id === cargo.car_body_type) {\r\n                                                return <div key={index}>\r\n                                                    {item.name}\r\n                                                </div>\r\n                                            }\r\n                                        })}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {cargoInfo.avans ? <div className=\"info\">\r\n                                    <div className=\"label-info\"> {t(\"info9\")}</div>\r\n                                    <div className=\"value-info\">  {cargoInfo.avans} {cargo.currency}</div>\r\n                                </div> : \"\"}\r\n\r\n                                {cargoInfo.wait_cost ? <div className=\"info\">\r\n\r\n                                    <div className=\"label-info\"> {t(\"info11\")}</div>\r\n\r\n                                    <div className=\"value-info\">\r\n                                        {cargoInfo.wait_cost} {cargo.currency}\r\n                                    </div>\r\n\r\n                                </div> : \"\"}\r\n\r\n                                {cargoInfo.load_time ? <div className=\"info\">\r\n                                    <div className=\"label-info\"> {t(\"info12\")}</div>\r\n                                    <div className=\"value-info\">\r\n                                        {cargoInfo.load_time.slice(0, 10)},\r\n                                        {cargoInfo.load_time.slice(11, 16)}\r\n                                    </div>\r\n                                </div> : \"\"}\r\n\r\n                                {cargoInfo.start_time ? <div className=\"info\">\r\n                                    <div className=\"label-info\"> {t(\"info13\")}</div>\r\n                                    <div className=\"value-info\">\r\n                                        {cargoInfo.start_time.slice(0, 10)},\r\n                                        {cargoInfo.start_time.slice(11, 16)}\r\n                                    </div>\r\n                                </div> : \"\"}\r\n\r\n                                <div className=\"buttons\">\r\n                                    <button onClick={CancelOrder}\r\n                                            className=\"cancel-btn\">{t(\"button3\")}</button>\r\n\r\n                                    <button onClick={ConfirmOrder} className=\"next-btn \">{t(\"button2\")}</button>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n\r\n                    </div>\r\n                }\r\n\r\n                {modalShow.status === \"getLocation\" && <div ref={nodeRef} className=\"map-wrapper\">\r\n\r\n                    <div className=\"header\">\r\n                        <div className=\"text\">\r\n                            {locationFrom && t(\"loc2\")}\r\n                            {locationTo && t(\"loc4\")}\r\n                        </div>\r\n                        <div className=\"cancel-btn\">\r\n                            <img onClick={() => showModalForm(\"\", false)} src=\"./images/x.png\" alt=\"\"/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <GoogleMap\r\n                        zoom={10}\r\n                        onLoad={onloadMap}\r\n                        center={center}\r\n                        options={options}\r\n                        onClick={ClicklLocation}\r\n                        mapContainerClassName=\"map-box\">\r\n\r\n                        {selected && <Marker icon={selectAddressIcon} position={selected}/>}\r\n\r\n                        <div className=\"search-address\">\r\n                            <div className=\"places-container\">\r\n                                <PlacesAutocomplete setSelected={setSelected}/>\r\n                                <img src=\"./images/search.png\" alt=\"\"/>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </GoogleMap>\r\n\r\n                    <div className=\"footer-map\">\r\n                        <div onClick={getAddressLocation} className=\"success-btn\">\r\n                            {t(\"button2\")}\r\n                        </div>\r\n                    </div>\r\n                </div>}\r\n\r\n            </div>\r\n        </CSSTransition>\r\n\r\n        <div ref={ref3} className=\"title\">\r\n            {t(\"post-order\")}\r\n        </div>\r\n\r\n        <div className=\"directions-card\">\r\n            {direction && <div className=\"direction-item\">\r\n                {direction === \"OUT\" ? t(\"direction2\") : \"\"}\r\n                {direction === \"IN\" ? t(\"direction3\") : \"\"}\r\n                {direction === \"Abroad\" ? t(\"direction1\") : \"\"}\r\n            </div>}\r\n\r\n            {category &&\r\n                <>\r\n                    <div className=\"line\"></div>\r\n                    {categories.map((item, index) => {\r\n                        if (item.id === category)\r\n                            return <div key={index} className=\"direction-item\">\r\n                                {item.name === \"Мини\" && t(\"tariff1\")}\r\n                                {item.name === \"Енгил\" && t(\"tariff2\")}\r\n                                {item.name === \"Ўрта\" && t(\"tariff3\")}\r\n                                {item.name === \"Оғир\" && t(\"tariff4\")}\r\n                                {item.name === \"Ўта оғир\" && t(\"tariff5\")}\r\n                                {item.name === \"Авто Ташувчи\" && t(\"tariff6\")}\r\n                                {item.id !== 9 && <>\r\n                                    , &nbsp; {item.min_weight} - {item.max_weight} {t(\"infoWaits4\")}\r\n                                </>}\r\n                            </div>\r\n                    })}\r\n\r\n                </>\r\n            }\r\n\r\n            {\r\n                trucks.map((item, index) => {\r\n                    if (item.id === cargo.car_body_type) {\r\n                        return <div key={index}>\r\n                            <div className=\"line\"></div>\r\n                            <div className=\"direction-item\">\r\n                                {item.name}\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                })\r\n            }\r\n\r\n        </div>\r\n\r\n        {\r\n            !nextPage ?\r\n                <>\r\n                    <div className=\"title-info\">\r\n                        {t(\"direction\")}\r\n                    </div>\r\n\r\n                    <div className=\"directions\">\r\n                        <div onClick={() => getDirection(\"IN\")}\r\n                             className={`direction ${direction === \"IN\" ? \"direction-active\" : \"\"}`}>\r\n                            <div className=\"photo\">\r\n                                <img src=\"./images/direction1.png\" alt=\"\"/>\r\n                            </div>\r\n                            <div className=\"name\">\r\n                                {t(\"direction3\")}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div onClick={() => getDirection(\"OUT\")}\r\n                             className={`direction ${direction === \"OUT\" ? \"direction-active\" : \"\"}`}>\r\n                            <div className=\"photo\">\r\n                                <img src=\"./images/direction2.png\" alt=\"\"/>\r\n                            </div>\r\n                            <div className=\"name\">\r\n                                {t(\"direction2\")}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div onClick={() => getDirection(\"Abroad\")}\r\n                             className={`direction ${direction === \"Abroad\" ? \"direction-active\" : \"\"}`}>\r\n                            <div className=\"photo\">\r\n                                <img src=\"./images/direction3.png\" alt=\"\"/>\r\n                            </div>\r\n                            <div className=\"name\">\r\n                                {t(\"direction1\")}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {\r\n                        direction &&\r\n                        <>\r\n                            <div className=\"title-info\">\r\n                                {t(\"tariff\")}\r\n                            </div>\r\n\r\n                            <div className=\"tarifs\">\r\n                                <div className=\"content\">\r\n                                    {\r\n                                        categories.map((item, index) => {\r\n                                            return <div onClick={() => {\r\n                                                getTrucks(item.id)\r\n                                                setTimeout(() => {\r\n                                                    ref.current?.scrollIntoView({behavior: 'smooth'});\r\n                                                }, 500);\r\n                                            }} key={index}\r\n                                                        className={`tarif ${category === item.id ? \"active-tarif\" : \"\"}`}>\r\n                                                <div className=\"photo\">\r\n                                                    <img src={item.image} alt=\"\"/>\r\n                                                </div>\r\n                                                <div className=\"text\">\r\n                                                    <div className=\"name\">\r\n                                                        {item.name === \"Мини\" && t(\"tariff1\")}\r\n                                                        {item.name === \"Енгил\" && t(\"tariff2\")}\r\n                                                        {item.name === \"Ўрта\" && t(\"tariff3\")}\r\n                                                        {item.name === \"Оғир\" && t(\"tariff4\")}\r\n                                                        {item.name === \"Ўта оғир\" && t(\"tariff5\")}\r\n                                                        {item.name === \"Авто Ташувчи\" && t(\"tariff6\")}\r\n                                                    </div>\r\n                                                    <div className=\"count\">\r\n                                                        {item.id !== 9 && <>\r\n                                                            {item.min_weight} - {item.max_weight} {t(\"infoWaits4\")}\r\n                                                        </>}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        })\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    }\r\n\r\n                    {\r\n                        category &&\r\n                        <>\r\n                            <div ref={ref} className=\"title-info\">\r\n                                {t(\"trucks\")}\r\n                            </div>\r\n                            <div className=\"trucks\">\r\n                                <div className=\"content\">\r\n                                    {\r\n                                        trucks.map((item, index) => {\r\n                                            return <div onClick={() => {\r\n                                                setInfoTruck(prevState => prevState = item)\r\n                                                cargo.car_body_type = item.id\r\n                                                setTimeout(() => {\r\n                                                    ref2.current?.scrollIntoView({behavior: 'smooth'});\r\n                                                }, 500);\r\n                                            }} key={index}\r\n                                                        className={`truck ${item.id === infoTruck.id ? \"active-truck\" : \"\"}`}>\r\n                                                <div className=\"photo\">\r\n                                                    <img src={`${baseUrl}${item.car_image}`} alt=\"\"/>\r\n                                                </div>\r\n                                                <div className=\"name\">\r\n                                                    {item.name}\r\n                                                </div>\r\n                                            </div>\r\n                                        })\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    }\r\n\r\n                    {\r\n                        infoTruck &&\r\n                        <>\r\n                            <div ref={ref2} className=\"truck-information\">\r\n                                <div className=\"text\">\r\n                                    <div className=\"name\">\r\n                                        {t(\"infoTruck1\")}:\r\n                                    </div>\r\n                                    <div className=\"num\">{infoTruck.widht/100} {t(\"infoWaits6\")}</div>\r\n                                </div>\r\n\r\n                                <div className=\"text\">\r\n                                    <div className=\"name\">\r\n                                        {t(\"infoTruck2\")}:\r\n                                    </div>\r\n                                    <div className=\"num\">{infoTruck.breadth/100} {t(\"infoWaits6\")}</div>\r\n                                </div>\r\n\r\n                                <div className=\"text\">\r\n                                    <div className=\"name\">\r\n                                        {t(\"infoTruck3\")}:\r\n                                    </div>\r\n                                    <div className=\"num\">{infoTruck.height/100} {t(\"infoWaits6\")}</div>\r\n                                </div>\r\n\r\n                                <div className=\"text\">\r\n                                    <div className=\"name\">\r\n                                        {t(\"infoTruck4\")}:\r\n                                    </div>\r\n                                    <div className=\"num\">\r\n                                        { infoTruck.name === \"Мини\" || infoTruck.name === \"Авто\" || infoTruck.name === \"Мулти\" ?\r\n                                            <>{infoTruck.cargo_weight} {t(\"infoWaits2\")}</>  :  <>{infoTruck.cargo_weight / 1000} {t(\"infoWaits4\")}</> }\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div className=\"buttons\">\r\n                                <button onClick={() => navigate(\"/\")} className=\"cancel-btn\">{t(\"button3\")}</button>\r\n                                <button onClick={() => {\r\n                                    setNextPage(prevState => prevState = true)\r\n                                    setTimeout(() => {\r\n                                        ref3.current?.scrollIntoView({behavior: 'smooth'});\r\n                                    }, 500);\r\n                                }}\r\n                                        className=\"next-btn \">{t(\"button1\")}</button>\r\n                            </div>\r\n                        </>\r\n                    }\r\n                </> :\r\n                <form onSubmit={formik.handleSubmit}>\r\n\r\n                    <div className=\"form-informations\">\r\n\r\n                        <div className=\"left-forms\">\r\n\r\n                            <div className=\"form-box\">\r\n                                <label htmlFor=\"cargo\">{t(\"info2\")}</label>\r\n\r\n                                {formik.errors.cargo && formik.errors.cargo !== \"Required\" ? <div className=\"error\">\r\n                                    {formik.errors.cargo}\r\n                                </div> : \"\"}\r\n\r\n                                <div\r\n                                    className={`input-box ${formik.errors.cargo === \"Required\" ? \"input-box-required\" : \"\"}`}>\r\n                                    <div className=\"icon\">\r\n                                        <img src=\"./images/cargo.png\" alt=\"cargo\"/>\r\n                                    </div>\r\n                                    <input\r\n                                        onChange={formik.handleChange}\r\n                                        value={formik.values.cargo}\r\n                                        name=\"cargo\"\r\n                                        id=\"cargo\" type=\"text\"/>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div onClick={() => {\r\n                                showModalForm(\"getLocation\", true)\r\n                                setLocationFrom(true)\r\n                                setLocationTo(false)\r\n                            }} className=\"form-box\">\r\n                                <label htmlFor=\"cargo\">{t(\"loc1\")}</label>\r\n                                <div className={`input-box ${validateLocationFrom ? \"input-box-required\" : \"\"}`}>\r\n                                    <div className=\"icon\">\r\n                                        <img src=\"./images/location.png\" alt=\"cargo\"/>\r\n                                    </div>\r\n                                    <div className=\"locitions\">\r\n                                        {locationFromAddress}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-box mobile-loc\">\r\n                                <label htmlFor=\"cargo\">{t(\"loc3\")}</label>\r\n                                <div onClick={() => {\r\n                                    showModalForm(\"getLocation\", true)\r\n                                    setLocationTo(true)\r\n                                    setLocationFrom(false)\r\n                                }} className={`input-box ${validateLocationTo ? \"input-box-required\" : \"\"}`}>\r\n                                    <div className=\"icon\">\r\n                                        <img src=\"./images/location.png\" alt=\"cargo\"/>\r\n                                    </div>\r\n                                    <div className=\"locitions\">\r\n                                        {locationToAddress}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {direction === \"Abroad\" && distance &&\r\n                                <div className=\"distance\">\r\n                                    <div className=\"label-distance\">\r\n                                        {t(\"info7\")}\r\n                                    </div>\r\n                                    <div className=\"count\">\r\n                                        {distance} km\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n\r\n                            <div onClick={() => showModalForm(\"payment-type\", true)} className=\"form-box-radio\">\r\n                                <label htmlFor=\"cargo\">{t(\"info10\")}</label>\r\n                                <div className=\"input-box\">\r\n                                    <div className=\"icon\">\r\n                                        <img src=\"./images/money.png\" alt=\"cargo\"/>\r\n                                    </div>\r\n                                    <div className=\"locitions\">\r\n                                        {payment_type}\r\n                                    </div>\r\n                                    <div className=\"icon\">\r\n                                        <img src=\"./images/down.png\" alt=\"cargo\"/>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div className=\"right-forms\">\r\n\r\n                            <div className=\"form-box-radio\">\r\n                                <label htmlFor=\"cargo\">{t(\"infoTruck4\")}</label>\r\n\r\n                                {formik.errors.capacity && formik.errors.capacity !== \"Required\" ?\r\n                                    <div className=\"error\">\r\n                                        {formik.errors.capacity}\r\n                                    </div> : \"\"}\r\n\r\n                                <div\r\n                                    className={`input-box ${formik.errors.capacity === \"Required\" ? \"input-box-required\" : \"\"}`}>\r\n                                    <div className=\"icon\">\r\n                                        <img src=\"./images/wait.png\" alt=\"cargo\"/>\r\n                                    </div>\r\n                                    <input\r\n                                        onChange={formik.handleChange}\r\n                                        value={formik.values.capacity}\r\n                                        name=\"capacity\"\r\n                                        type=\"text\"/>\r\n\r\n                                    <div onClick={() => showModalForm(\"cargo-weight\", true)} className=\"icon-right\">\r\n                                        <div className=\"text\">\r\n                                            {unit}\r\n                                        </div>\r\n                                        <img src=\"./images/down.png\" alt=\"cargo\"/>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-box desktop-loc\">\r\n                                <label htmlFor=\"cargo\">{t(\"loc3\")}</label>\r\n                                <div onClick={() => {\r\n                                    showModalForm(\"getLocation\", true)\r\n                                    setLocationTo(true)\r\n                                    setLocationFrom(false)\r\n                                }} className={`input-box ${validateLocationTo ? \"input-box-required\" : \"\"}`}>\r\n                                    <div className=\"icon\">\r\n                                        <img src=\"./images/location.png\" alt=\"cargo\"/>\r\n                                    </div>\r\n                                    <div className=\"locitions\">\r\n                                        {locationToAddress}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {\r\n                                direction === \"Abroad\" && <div className=\"form-box-radio\">\r\n                                    <label htmlFor=\"cargo\">{t(\"info8\")}</label>\r\n\r\n                                    {formik.errors.price && formik.errors.price !== \"Required\" ? <div className=\"error\">\r\n                                        {formik.errors.price}\r\n                                    </div> : \"\"}\r\n\r\n                                    <div\r\n                                        className={`input-box ${formik.errors.price === \"Required\" ? \"input-box-required\" : \"\"}`}>\r\n                                        <div className=\"icon\">\r\n                                            <img src=\"./images/pay.png\" alt=\"cargo\"/>\r\n                                        </div>\r\n                                        <input\r\n                                            onChange={formik.handleChange}\r\n                                            value={formik.values.price}\r\n                                            name=\"price\"\r\n                                            type=\"text\"/>\r\n\r\n                                        <div onClick={() => showModalForm(\"currency\", true)} className=\"icon-right\">\r\n                                            <div className=\"text\">\r\n                                                {currency}\r\n                                            </div>\r\n                                            <img src=\"./images/down.png\" alt=\"cargo\"/>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div onClick={() => setPlusInformation(prevState => prevState = !prevState)}\r\n                         className=\"plus-information\">\r\n                        <div className=\"input-box\">\r\n                            <div className=\"icon-doc\">\r\n                                <img src=\"./images/doc.png\" alt=\"cargo\"/>\r\n                            </div>\r\n                            <div className=\"locitions\">\r\n                                {t(\"plusInformation\")}\r\n                            </div>\r\n                            <div className={`icon ${plusInformation ? \"icon-rotate\" : \"\"}`}>\r\n                                <img src=\"./images/down.png\" alt=\"cargo\"/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {\r\n                        plusInformation ? <div className=\"plus-information-forms\">\r\n\r\n                            <div className=\"content-forms\">\r\n                                <div className=\"form-box\">\r\n                                    <label htmlFor=\"number_cars\">{t(\"info3\")}</label>\r\n                                    {formik.errors.number_cars && formik.errors.number_cars !== \"Required\" ?\r\n                                        <div className=\"error\">\r\n                                            {formik.errors.number_cars}\r\n                                        </div> : \"\"}\r\n                                    <div\r\n                                        className={`input-box ${formik.errors.number_cars === \"Required\" ? \"input-box-required\" : \"\"}`}>\r\n                                        <div className=\"icon\">\r\n                                            <img src=\"./images/add-truck.png\" alt=\"cargo\"/>\r\n                                        </div>\r\n                                        <input\r\n                                            onChange={formik.handleChange}\r\n                                            value={formik.values.number_cars}\r\n                                            name=\"number_cars\"\r\n                                            id=\"number_cars\" type=\"text\"/>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"form-box-time\">\r\n                                    <label htmlFor=\"cargo\">{t(\"info12\")}</label>\r\n\r\n                                    <div className=\"forms\">\r\n                                        <div className=\"input-box\">\r\n\r\n                                            <div className=\"icon\">\r\n                                                <img className=\"mobile-icon\" src=\"./images/date.png\" alt=\"\"/>\r\n                                            </div>\r\n\r\n                                            <input\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.load_time}\r\n                                                name=\"load_time\"\r\n                                                id=\"load_time\" type=\"datetime-local\"/>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"form-box-time\">\r\n                                    <label htmlFor=\"cargo\">{t(\"info13\")}</label>\r\n                                    <div className=\"forms\">\r\n                                        <div className=\"input-box\">\r\n\r\n                                            <div className=\"icon\">\r\n                                                <img className=\"mobile-icon\" src=\"./images/date.png\" alt=\"\"/>\r\n                                            </div>\r\n\r\n                                            <input\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.start_time}\r\n                                                name=\"start_time\"\r\n                                                id=\"start_time\" type=\"datetime-local\"/>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"content-forms\">\r\n                                {direction === \"Abroad\" && <div className=\"form-box-radio\">\r\n                                    <label htmlFor=\"cargo\">{t(\"info9\")}</label>\r\n                                    {formik.errors.avans && formik.errors.avans !== \"Required\" ?\r\n                                        <div className=\"error\">\r\n                                            {formik.errors.avans}\r\n                                        </div> : \"\"}\r\n\r\n                                    <div\r\n                                        className={`input-box ${formik.errors.avans === \"Required\" ? \"input-box-required\" : \"\"}`}>\r\n                                        <div className=\"icon\">\r\n                                            <img src=\"./images/pay.png\" alt=\"cargo\"/>\r\n                                        </div>\r\n                                        <input\r\n                                            onChange={formik.handleChange}\r\n                                            value={formik.values.avans}\r\n                                            name=\"avans\"\r\n                                            type=\"text\"/>\r\n                                        <div className=\"icon-right\">\r\n                                            <div className=\"text\">\r\n                                                {currency}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>}\r\n\r\n                                {direction === \"Abroad\" && <div className=\"form-box-radio\">\r\n                                    <label htmlFor=\"cargo\">{t(\"info11\")}</label>\r\n\r\n                                    {formik.errors.wait_cost && formik.errors.wait_cost !== \"Required\" ?\r\n                                        <div className=\"error\">\r\n                                            {formik.errors.wait_cost}\r\n                                        </div> : \"\"}\r\n\r\n                                    <div\r\n                                        className={`input-box ${formik.errors.wait_cost === \"Required\" ? \"input-box-required\" : \"\"}`}>\r\n                                        <div className=\"icon\">\r\n                                            <img src=\"./images/pay.png\" alt=\"cargo\"/>\r\n                                        </div>\r\n                                        <input\r\n                                            onChange={formik.handleChange}\r\n                                            value={formik.values.wait_cost}\r\n                                            name=\"wait_cost\"\r\n                                            id=\"wait_cost\" type=\"text\"/>\r\n                                        <div onClick={() => showModalForm(\"weight-type\", true)} className=\"icon-right\">\r\n                                            <div className=\"text\">\r\n                                                {currency} / {wait_type}\r\n                                            </div>\r\n                                            <img src=\"./images/down.png\" alt=\"cargo\"/>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>}\r\n                            </div>\r\n\r\n                        </div> : \"\"\r\n                    }\r\n\r\n\r\n                    <div className=\"buttons\">\r\n                        <div onClick={() => {\r\n                            setNextPage(false)\r\n                            setSearchLocationAddress(\"\")\r\n                            setLocationCode(\"\")\r\n                            setLocationToAddress(\"\")\r\n                            setLocationFromAddress(\"\")\r\n                            setSelected(null)\r\n                        }} className=\"cancel-btn\">{t(\"button7\")}</div>\r\n\r\n                        <button type=\"submit\" className=\"next-btn \">{t(\"button1\")}</button>\r\n                    </div>\r\n\r\n                </form>\r\n        }\r\n    </div>\r\n}\r\n\r\nexport default PostOrder","export const GOOGLE_MAPS_API_KEY = 'AIzaSyAT1gB8sob8_piFwfeu3AaTL15yHyjuc30'","import \"./style.scss\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { RWebShare } from \"react-web-share\";\r\nimport {showModals} from \"../../redux/ModalContent\";\r\n\r\n\r\nconst Profile = () => {\r\n    const dispatch = useDispatch();\r\n    const baseUrl = useSelector((store) => store.baseUrl.data)\r\n    const {t} = useTranslation();\r\n    const [user, setUser] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        axios.get(`${baseUrl}api/client/`, {\r\n                headers: {\r\n                    \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\r\n                }\r\n            }\r\n        ).then((response) => {\r\n            setUser(response.data);\r\n        }).catch((error) => {\r\n            if (error.response.statusText == \"Unauthorized\") {\r\n                window.location.pathname = \"/\";\r\n                localStorage.removeItem(\"token\");\r\n                localStorage.removeItem(\"userId\");\r\n            }\r\n        });\r\n\r\n\r\n    }, [])\r\n\r\n\r\n    const showModalContent = () => {\r\n        dispatch(showModals({show: true, status: \"log-out\"}));\r\n    };\r\n\r\n    return <div className=\"profile-container\">\r\n        <div className=\"title\">\r\n            {t(\"nav-profile\")}\r\n        </div>\r\n\r\n        <div className=\"person\">\r\n            <div className=\"photo\">\r\n                <img src=\"./images/user.png\" alt=\"user\"/>\r\n            </div>\r\n            <div className=\"text\">\r\n                <div className=\"name\">{user.first_name && user.first_name} {user.last_name && user.last_name}</div>\r\n                <div className=\"phone\">{user.phone && user.phone}</div>\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"send-buttons\">\r\n\r\n            <div className=\"send-btn\">\r\n                <RWebShare\r\n                    data={{\r\n                        text: \"Buyuk yo'l\",\r\n                        url: \"https://client.buyukyol.uz/\",\r\n                        title: \"Buyuk yo'l\",\r\n                    }}\r\n                >\r\n                    <button>\r\n                        <div className=\"left\">\r\n                            <div className=\"icon\">\r\n                                <img src=\"./images/Vector.png\" alt=\"Vector\"/>\r\n                            </div>\r\n                            <div className=\"name\">\r\n                                {t(\"share\")}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"right\">\r\n                            <img src=\"./images/Stroke.png\" alt=\"Stroke\"/>\r\n                        </div>\r\n                    </button>\r\n                </RWebShare>\r\n            </div>\r\n\r\n            <div className=\"send-btn\">\r\n                <div className=\"left\">\r\n                    <div className=\"icon\">\r\n                        <img src=\"./images/help.png\" alt=\"Vector\"/>\r\n                    </div>\r\n                    <div className=\"name\">\r\n                        {t(\"grade\")}\r\n                    </div>\r\n                </div>\r\n                <div className=\"right\">\r\n                    <img src=\"./images/Stroke.png\" alt=\"Stroke\"/>\r\n                </div>\r\n            </div>\r\n\r\n            <a href=\"https://t.me/buyukyol_admin\" target=\"_blank\" className=\"send-btn\">\r\n                <div className=\"left\">\r\n                    <div className=\"icon\">\r\n                        <img src=\"./images/sms.png\" alt=\"Vector\"/>\r\n                    </div>\r\n                    <div className=\"name\">\r\n                        {t(\"contact\")}\r\n                    </div>\r\n                </div>\r\n                <div className=\"right\">\r\n                    <img src=\"./images/Stroke.png\" alt=\"Stroke\"/>\r\n                </div>\r\n            </a>\r\n\r\n\r\n            <div onClick={showModalContent} className=\"send-btn-log-out\">\r\n                <div className=\"left\">\r\n                    <div className=\"icon\">\r\n                        <img src=\"./images/sign-out.png\" alt=\"Vector\"/>\r\n                    </div>\r\n                    <div className=\"name\">\r\n                        {t(\"log-out\")}\r\n                    </div>\r\n                </div>\r\n                <div className=\"right\">\r\n                    <img src=\"./images/Stroke.png\" alt=\"Stroke\"/>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Profile","import axios from \"axios\";\r\nimport \"./style.scss\"\r\nimport {useEffect, useState} from \"react\";\r\nimport i18next from \"i18next\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nconst Notification = () => {\r\n    const {t} = useTranslation();\r\n    const [newsList, setNewsList] = useState([])\r\n    const baseUrl = useSelector((store) => store.baseUrl.data)\r\n\r\n    useEffect(() => {\r\n        axios.get(`${baseUrl}api/news/`, {\r\n            headers: {\r\n                \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\r\n            }, params: {\r\n                user_type: \"Client\"\r\n            }\r\n        }).then((response) => {\r\n            setNewsList(response.data)\r\n        }).catch((error) => {\r\n            if (error.response.statusText == \"Unauthorized\") {\r\n                window.location.pathname = \"/\";\r\n                localStorage.removeItem(\"token\");\r\n                localStorage.removeItem(\"userId\");\r\n            }\r\n        });\r\n    }, [])\r\n\r\n    return <div className=\"notification-container\">\r\n        <div className=\"title\">\r\n            {t(\"news\")}\r\n        </div>\r\n        <div className=\"news-warpper\">\r\n            {newsList.map((item, index) => {\r\n                return <div key={index} className=\"news\">\r\n                    <div className=\"image\">\r\n                        <img src={item.image} alt=\"\"/>\r\n                    </div>\r\n                    <div className=\"date\">{item.time.slice(0, 10)}</div>\r\n                    <div className=\"news-title\">\r\n                        {item.title}\r\n                    </div>\r\n                    <div className=\"news-des\">\r\n                        {i18next.language === \"uz\" && item.description}\r\n                        {i18next.language === \"ru\" && item.description_ru}\r\n                    </div>\r\n                </div>\r\n            })}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Notification","import {useEffect, useState} from \"react\";\r\nimport \"./style.scss\"\r\nimport Loader from \"../loader/Loader\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport {showModals} from \"../../redux/ModalContent\";\r\nimport {getOrders} from \"../../redux/Orders\";\r\n\r\n\r\nconst History = () => {\r\n    const {t} = useTranslation();\r\n    const dispatch = useDispatch()\r\n    const baseUrl = useSelector((store) => store.baseUrl.data)\r\n    const [activeTab, setActiveTab] = useState(\"Active\")\r\n    const tabs = [\r\n        {\r\n            status: \"Active\",\r\n            name: t(\"cargoLabel1\")\r\n        },\r\n        {\r\n            status: \"Delivering\",\r\n            name: t(\"cargoLabel2\")\r\n        },\r\n        {\r\n            status: \"Delivered\",\r\n            name: t(\"cargoLabel3\")\r\n        },\r\n        {\r\n            status: \"Rejected\",\r\n            name: t(\"cargoLabel4\")\r\n        }\r\n    ]\r\n    const ordersList = useSelector((store) => store.Orders.data)\r\n\r\n    useEffect(() => {\r\n        dispatch(getOrders())\r\n    }, [])\r\n\r\n    const showModalContent = (order) => {\r\n        dispatch(showModals({show: true, status: \"order\", order}))\r\n    }\r\n\r\n    return <div className=\"history-container\">\r\n        {\r\n            ordersList ? !ordersList.length > 0 ? <Loader/> :\r\n                <>\r\n                    <div className=\"title-history\">\r\n                        {t(\"nav-history\")}\r\n                    </div>\r\n\r\n                    <div className=\"header-history\">\r\n\r\n                        <div className=\"tabs-box\">\r\n                            {\r\n                                tabs.map((item, index) => {\r\n                                    return <div onClick={() => setActiveTab(prevState => prevState = item.status)}\r\n                                                key={index}\r\n                                                className={`tab-btn ${activeTab === item.status ? \"tab-active\" : \"\"} `}>\r\n                                        {item.name}\r\n                                    </div>\r\n                                })\r\n                            }\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"orders-box\">\r\n                        {\r\n                            ordersList.map((item, index) => {\r\n                                if (activeTab === item.status)\r\n                                    return <div key={index} className=\"order\">\r\n                                        <div className=\"top-side-order\">\r\n                                            <div className=\"date\">\r\n                                                {item.ordered_time.slice(0, 10)}, &nbsp;\r\n                                                {item.ordered_time.slice(11, 16)}\r\n                                            </div>\r\n\r\n                                            <div className={`btn-badge ${activeTab}`}>\r\n                                                {activeTab === \"Active\" && t(\"cargoLabel1\")}\r\n                                                {activeTab === \"Delivering\" && t(\"cargoLabel2\")}\r\n                                                {activeTab === \"Delivered\" && t(\"cargoLabel3\")}\r\n                                                {activeTab === \"Rejected\" && t(\"cargoLabel4\")}\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"cards\">\r\n                                            <div onClick={() => showModalContent(item)} className=\"bottom-side-order\">\r\n\r\n                                                <div className=\"photo\">\r\n                                                    <img src={`${baseUrl}${item.car_category.image}`} alt=\"\"/>\r\n                                                </div>\r\n\r\n                                                <div className=\"content\">\r\n                                                    <div className=\"title\">\r\n                                                        {item.order_title ? item.order_title : item.type === \"OUT\" ? t(\"direction2\") :\r\n                                                            item.type === \"IN\" ? t(\"direction3\") : t(\"direction1\")}\r\n                                                    </div>\r\n                                                    <div className=\"text\">\r\n                                                        <img src=\"./images/location.png\" alt=\"\"/>\r\n                                                        <div className=\"info\">\r\n                                                            <div className=\"label\">{t(\"info7\")}</div>\r\n                                                            <div className=\"content\">{item.distance} km</div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"text\">\r\n                                                        <img src=\"./images/price.png\" alt=\"\"/>\r\n                                                        <div className=\"info\">\r\n                                                            <div className=\"label\">{t(\"info14\")}</div>\r\n                                                            <div className=\"content\">{item.price} {item.currency}</div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                            </div>\r\n\r\n\r\n                                            {\r\n                                                item.status === \"Delivering\" ? <div className=\"line\">\r\n\r\n                                                </div> : \"\"\r\n                                            }\r\n\r\n\r\n                                            {\r\n                                                item.status === \"Delivering\" ?\r\n                                                    <a href={`tel:${item.phone}`} className=\"bottom-side-driver\">\r\n\r\n                                                        <div className=\"photo\">\r\n                                                            <img src={baseUrl + item.driver.image} alt=\"\"/>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"content\">\r\n                                                            <div className=\"title\">\r\n                                                                {item.driver.name}\r\n                                                            </div>\r\n                                                            <div className=\"text\">\r\n                                                                <img src=\"./images/truck2.png\" alt=\"\"/>\r\n                                                                <div className=\"info\">\r\n                                                                    <div className=\"label\">\r\n                                                                        {item.driver.car_name}\r\n                                                                    </div>\r\n                                                                    <div className=\"content\">\r\n                                                                        {item.driver.car_number}\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"text\">\r\n                                                                <img src=\"./images/phone.png\" alt=\"\"/>\r\n                                                                <div className=\"info\">\r\n                                                                    <div className=\"label\">{item.driver.phone}</div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                    </a> : \"\"\r\n                                            }\r\n                                        </div>\r\n\r\n                                    </div>\r\n                            })\r\n                        }\r\n                    </div>\r\n                </> :\"\"\r\n        }\r\n\r\n    </div>\r\n}\r\n\r\nexport default History","import \"./style.scss\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {useState} from \"react\";\r\nimport i18next from \"i18next\";\r\n\r\nconst MapBoxMobile = () => {\r\n    const [dropdown, setDropdown] = useState(false)\r\n    const navigate = useNavigate();\r\n    const {t} = useTranslation();\r\n\r\n    const language = [\r\n        {\r\n            code: \"uz\",\r\n            name: \"UZ\",\r\n            country_code: \"uz\",\r\n        },\r\n        {\r\n            code: \"en\",\r\n            name: \"EN\",\r\n            country_code: \"en\",\r\n        },\r\n        {\r\n            code: \"ru\",\r\n            name: \"RU\",\r\n            country_code: \"ru\",\r\n        },\r\n    ];\r\n    const changeLanguage = (code) => {\r\n        localStorage.setItem(\"lng\", code);\r\n        i18next.changeLanguage(code);\r\n    };\r\n\r\n    return (<div className=\"settings-container\">\r\n\r\n        <div className=\"header\">\r\n            <div></div>\r\n            <div className=\"title\">\r\n                {t(\"nav-settings\")}\r\n            </div>\r\n\r\n            <div onClick={() => navigate(\"/news\")} className=\"icon-news\">\r\n                <img src=\"./images/news.png\" alt=\"\"/>\r\n            </div>\r\n        </div>\r\n\r\n        <div onClick={() => setDropdown(prevState => !prevState)} className=\"language-dropdown\">\r\n            <div className=\"left-side\">\r\n                <div className=\"icon\">\r\n                    <img src=\"./images/world.png\" alt=\"\"/>\r\n                </div>\r\n                <div className=\"name\">\r\n                    {t(\"language\")}\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"right-side\">\r\n                <div className=\"name\">\r\n                    {language.map((item, index) => {\r\n                        return (\r\n                            <div key={index}>\r\n                                {i18next.language === item.code ? item.name : \"\"}\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n                <div className={`icon ${dropdown ? \"rotate-icon\" :\"\"}`}>\r\n                    <img src=\"./images/down.png\" alt=\"\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        {\r\n            dropdown ? <div className=\"language-content\">\r\n\r\n                {language.map(({code, name, country_code}) => (\r\n                    <div\r\n                        key={country_code}\r\n                        onClick={() => changeLanguage(code)}\r\n                        className=\"menu-item\"\r\n                    >\r\n                       <div className=\"circle\">\r\n                           {i18next.language === code ? <div className=\"circle-radio\"></div> :\"\"}\r\n                       </div>\r\n                        {name}\r\n                    </div>\r\n                ))}\r\n\r\n            </div> : \"\"\r\n        }\r\n\r\n    </div>);\r\n};\r\n\r\nexport default MapBoxMobile;\r\n","import Dashboard from \"../components/dashboard/Dashboard\";\r\nimport Login from \"../components/login/Login\";\r\nimport Register from \"../components/register/Register\";\r\nimport MapBox from \"../components/map/MapBox\";\r\nimport PostOrder from \"../components/post-order/PostOrder\";\r\nimport Profile from \"../components/profile/Profile\";\r\nimport Notification from \"../components/notification/Notification\";\r\nimport History from \"../components/history/History\";\r\nimport SettingsMobile from \"../components/settings-mobile/SettingsMobile\";\r\n\r\nexport const loginRoutes = [\r\n    {\r\n        path: \"/\",\r\n        element: <Login/>\r\n    },\r\n    {\r\n        path: \"/register\",\r\n        element: <Register/>\r\n    }\r\n];\r\n\r\nexport const userRoutes = [\r\n    {\r\n        path: \"/*\",\r\n        element: <Dashboard/>\r\n    },\r\n];\r\n\r\nexport const userPageRoutes = [\r\n    {\r\n        path: \"/\",\r\n        element: <MapBox/>\r\n    },\r\n    {\r\n        path: \"/post-order\",\r\n        element: <PostOrder/>\r\n    },\r\n    {\r\n        path: \"/profile\",\r\n        element: <Profile/>\r\n    },\r\n    {\r\n        path: \"/news\",\r\n        element: <Notification/>\r\n    },\r\n    {\r\n        path: \"/history\",\r\n        element: <History/>\r\n    },\r\n    {\r\n        path: \"/settings\",\r\n        element: <SettingsMobile/>\r\n    },\r\n];\r\n\r\n\r\n","import React, {useMemo, useState, useEffect, createContext} from \"react\";\r\nimport {Routes, Route} from \"react-router-dom\";\r\nimport NotFound from \"../notFound/NotFound\";\r\nimport {userRoutes, loginRoutes} from \"../../routes/Routes\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {w3cwebsocket as W3CWebSocket} from \"websocket\"\r\nimport {addAlert, delAlert} from \"../../redux/AlertsBox\";\r\nimport {addDriver, filterDriver, filterDriverDelivered, updateDriver} from \"../../redux/driversList\";\r\nimport {filterRaidDriver, addRaidDriver} from \"../../redux/RaidDriver\";\r\nimport {getDistance} from \"../../redux/distance\";\r\nimport {getPrice} from \"../../redux/Price\";\r\nimport {getOrders} from \"../../redux/Orders\";\r\nimport {hideModal} from \"../../redux/ModalContent\";\r\nimport {addActiveDriver, updateActiveDriver} from \"../../redux/ActiveDriversList\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport success from \"./sound/success.mp3\"\r\nimport error from \"./sound/error.mp3\"\r\n\r\nexport const webSockedContext = createContext();\r\n\r\nconst App = () => {\r\n    const {t} = useTranslation();\r\n    const user = useMemo(() => localStorage.getItem('token'), []);\r\n    const routes = useMemo(() => {\r\n        if (user) return userRoutes;\r\n        return loginRoutes\r\n    }, [user]);\r\n    const dispatch = useDispatch();\r\n    const [sockedContext, setSockedContext] = useState(null);\r\n    const drivers = useSelector((store) => store.DriversList.data);\r\n\r\n    function successAudio() {\r\n        new Audio(success).play()\r\n    }\r\n\r\n    function errorAudio() {\r\n        new Audio(error).play()\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!localStorage.getItem(\"token\")) return () => {\r\n        }\r\n\r\n        navigator.geolocation.getCurrentPosition((position) => {\r\n            const {latitude, longitude} = position.coords;\r\n            const location = `${latitude}/${longitude}`;\r\n            const websocket = new W3CWebSocket(`wss://api.buyukyol.uz/ws/orders/${location}/?token=${localStorage.getItem(\"token\")}`);\r\n            setSockedContext(websocket);\r\n            let idAlertError = Date.now();\r\n\r\n            websocket.onclose = () => {\r\n                window.location.reload()\r\n            }\r\n\r\n            websocket.onerror = (event) => {\r\n                let alert = {\r\n                    id: idAlertError, text: t(\"net\"), img: \"./images/red.svg\", color: \"#FFEDF1\"\r\n                };\r\n                dispatch(addAlert(alert));\r\n                setTimeout(() => {\r\n                    window.location.reload()\r\n                }, 1000)\r\n            };\r\n\r\n            websocket.onopen = () => {\r\n                dispatch(delAlert(idAlertError));\r\n            }\r\n\r\n        }, (error) => {\r\n            let idAlertError = Date.now();\r\n            let alert = {\r\n                id: idAlertError, text: t(\"geoLocationError\"), img: \"./images/yellow.svg\", color: \"#FFFAEA\"\r\n            };\r\n            dispatch(addAlert(alert));\r\n        });\r\n\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n\r\n        setSockedContext(websocket => {\r\n            if (!websocket) return null\r\n\r\n            websocket.onmessage = (event) => {\r\n\r\n                const data = JSON.parse(event.data);\r\n                if (!(\"status\" in data.message)) {\r\n                    dispatch(filterDriver(data.message));\r\n                    dispatch(filterRaidDriver(data.message));\r\n                }\r\n\r\n                if (data.message.status) {\r\n\r\n                    if (data.message.status === \"distance\") {\r\n                        dispatch(getDistance(data.message.distance));\r\n                    }\r\n\r\n                    if (data.message.status === \"Price\") {\r\n                        dispatch(getPrice(data.message));\r\n                    }\r\n\r\n                    if (data.message.status === \"confirmed\" || data.message.status === \"Added\") {\r\n                        let idAlert = Date.now();\r\n                        let alert = {\r\n                            id: idAlert, text: t(\"alert1\"), img: \"./images/green.svg\", color: \"#EDFFFA\"\r\n                        };\r\n                        dispatch(addAlert(alert));\r\n                        successAudio()\r\n                        setTimeout(() => {\r\n                            dispatch(delAlert(idAlert));\r\n                        }, 5000);\r\n                        dispatch(getOrders());\r\n                    }\r\n\r\n                    if (data.message.status === \"canceled\") {\r\n                        let idAlert = Date.now();\r\n                        let alert = {\r\n                            id: idAlert, text: t(\"alert2\"), img: \"./images/red.svg\", color: \"#FFEDF1\"\r\n                        };\r\n                        dispatch(addAlert(alert));\r\n                        errorAudio()\r\n                        setTimeout(() => {\r\n                            dispatch(delAlert(idAlert));\r\n                        }, 5000);\r\n                        dispatch(getOrders());\r\n                        dispatch(hideModal({show: false}));\r\n                        dispatch(updateDriver(data.message));\r\n                        if (data.message.driver_id) {\r\n                            dispatch(updateActiveDriver(data.message.driver_id));\r\n                        }\r\n                    }\r\n\r\n                    if (data.message.status === \"Accepted\") {\r\n                        let idAlert = Date.now();\r\n                        let alert = {\r\n                            id: idAlert, text: t(\"alert8\"), img: \"./images/green.svg\", color: \"#EDFFFA\"\r\n                        };\r\n                        dispatch(addAlert(alert));\r\n                        successAudio()\r\n                        setTimeout(() => {\r\n                            dispatch(delAlert(idAlert));\r\n                        }, 30000);\r\n\r\n                        dispatch(addDriver(data.message.driver));\r\n                        dispatch(getOrders());\r\n                    }\r\n\r\n                    if (data.message.status === \"delivering\") {\r\n                        let idAlert = Date.now();\r\n                        let alert = {\r\n                            id: idAlert, text: t(\"alert9\"), img: \"./images/green.svg\", color: \"#EDFFFA\"\r\n                        };\r\n                        dispatch(addAlert(alert));\r\n                        successAudio()\r\n                        setTimeout(() => {\r\n                            dispatch(delAlert(idAlert));\r\n                        }, 5000);\r\n                    }\r\n\r\n                    if (data.message.status === \"delivered\") {\r\n                        let idAlert = Date.now();\r\n                        let alert = {\r\n                            id: idAlert, text: t(\"alert10\"), img: \"./images/green.svg\", color: \"#EDFFFA\"\r\n                        };\r\n                        dispatch(addAlert(alert));\r\n                        successAudio()\r\n                        setTimeout(() => {\r\n                            dispatch(delAlert(idAlert));\r\n                        }, 10000);\r\n                        let newRaidDriver = drivers.filter((item) => Number(item.id) === Number(data.message.id))\r\n                        dispatch(addRaidDriver(newRaidDriver));\r\n                        dispatch(filterDriverDelivered(data.message.id));\r\n                        dispatch(updateActiveDriver(newRaidDriver[0].driver.id));\r\n                    }\r\n\r\n                    if (data.message.status === \"location\") {\r\n                        dispatch(addActiveDriver(data.message.driver));\r\n                    }\r\n                }\r\n\r\n                if (data.message.status === false) {\r\n                    if (data.message === \"invalid token\") {\r\n                        window.location.pathname = \"/\";\r\n                        localStorage.removeItem(\"token\");\r\n                        localStorage.removeItem(\"userId\");\r\n                    }\r\n                }\r\n            };\r\n\r\n            return websocket\r\n        })\r\n\r\n    }, [sockedContext, drivers])\r\n\r\n\r\n    return <webSockedContext.Provider value={sockedContext}>\r\n        <Routes>\r\n            {routes.map((route, index) => (<Route key={index} {...route} />))}\r\n            <Route path={'*'} element={<NotFound/>}/>\r\n        </Routes>\r\n    </webSockedContext.Provider>\r\n};\r\n\r\nexport default App;"],"names":["NotFound","t","useTranslation","_jsx","className","children","_jsxs","Modal","baseUrl","useSelector","store","data","modalContent","ModalContent","activeOrders","Orders","drivers","DriversList","Raiddriver","RaidDriver","webSocked","useContext","webSockedContext","navigate","useNavigate","nodeRef","useRef","dispatch","useDispatch","raidCount","setRaidCount","useState","reason","setReason","add_reason","setAdd_Reason","cargoId","setCargoId","many","setMany","comment","setComment","useEffect","getOrders","CSSTransition","in","show","length","timeout","classNames","unmountOnExit","concat","status","ref","onClick","hideModal","logOut","localStorage","removeItem","window","location","reload","pathname","order","src","alt","type","address_from","address_to","cargo","distance","payment_type","price","currency","number_cars","capacity","unit","car_category","min_weight","max_weight","name","car_body_type","avans","wait_cost","load_time","slice","start_time","ordered_time","rejected_reason","showCancel","id","showModals","onChange","e","target","value","htmlFor","placeholder","delOrder","command","send","JSON","stringify","checked","map","item","index","href","phone","driver","image","first_name","last_name","car_number","order_title","ReactStars","count","size","color2","half","cancelRaid","filter","addRaidDriver","sendRaid","did","raidList","delivery","mark","axios","post","headers","Authorization","getItem","then","response","idAlert","Date","now","alert","text","img","color","addAlert","setTimeout","delAlert","catch","error","statusText","Alerts","style","background","delAlerts","DashboardMobile","nav","setNav","get","Routes","userPageRoutes","route","Route","prevState","Dashboard","dropdownShow","setDropdownShow","language","code","country_code","NavLink","to","_ref","isActive","_ref2","_ref3","i18next","_ref4","setItem","changeLanguage","showModalContent","Login","setPhone","setCode","checkCode","setCheckCode","minutes","setMinutes","seconds","setSeconds","interval","setInterval","clearInterval","HandleLogin","user","user_type","CheckCode","number","token","useOnKeyPress","callback","targetKey","keyPressHandler","event","key","addEventListener","removeEventListener","PhoneInput","international","defaultCountry","disabled","undefined","_Fragment","AuthCode","allowedCharacters","trim","Register","setFirst_name","setLast_name","checkVerify","setCheckVerify","libraries","MapBoxMobile","center","setCenter","setUser","Activedrivers","ActiveDriversList","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","lat","lng","isLoaded","useLoadScript","googleMapsApiKey","options","useMemo","disableDefaultUI","clickableIcons","showInfo","truckIcon","url","scaledSize","width","height","GoogleMap","zoom","mapContainerClassName","Marker","icon","Number","postOrder","is_block","Loader","MapBox","PostOrder","Distance","Price","ref2","ref3","categories","setCategories","trucks","setTrucks","direction","setDirection","category","setCategory","infoTruck","setInfoTruck","nextPage","setNextPage","cargoInfo","setCargoInfo","cargoInfoAll","setCargoInfoAll","setUnit","setPayment_type","setCurrency","wait_type","setWait_type","modalShow","setModalShow","plusInformation","setPlusInformation","locationFrom","setLocationFrom","locationFromAddress","setLocationFromAddress","locationTo","setLocationTo","locationCode","setLocationCode","locationToAddress","setLocationToAddress","countryCode","setCountryCode","searchLocationAddress","setSearchLocationAddress","selected","setSelected","validateLocationFrom","setValidateLocationFrom","validateLocationTo","setValidateLocationTo","setCargo","client","latitude_from","longitude_from","latitude_to","longitude_to","formik","useFormik","initialValues","validate","values","errors","isNaN","onSubmit","showModalForm","SendOrder","errorAudio","Audio","play","re","reverse","getDirection","PlacesAutocomplete","ready","setValue","suggestions","clearSuggestions","usePlacesAutocomplete","requestOptions","Combobox","onSelect","async","results","getGeocode","address","getLatLng","res","city","country","suburb","neighbourhood","county","road","fullAddress","ComboboxInput","place_id","description","ComboboxOption","onloadMap","CancelOrder","ConfirmOrder","resetForm","getDistance","getPrice","resetCargo","onLoad","latLng","locMy","getAddressLocation","toString","handleSubmit","handleChange","categoryId","_ref$current","current","scrollIntoView","behavior","_ref2$current","car_image","widht","breadth","cargo_weight","_ref3$current","Profile","RWebShare","title","Notification","newsList","setNewsList","params","time","description_ru","History","activeTab","setActiveTab","tabs","ordersList","car_name","dropdown","setDropdown","loginRoutes","path","element","userRoutes","SettingsMobile","createContext","App","routes","sockedContext","setSockedContext","successAudio","success","websocket","W3CWebSocket","idAlertError","onclose","onerror","onopen","onmessage","parse","message","filterDriver","filterRaidDriver","updateDriver","driver_id","updateActiveDriver","addDriver","newRaidDriver","filterDriverDelivered","addActiveDriver","Provider"],"sourceRoot":""}